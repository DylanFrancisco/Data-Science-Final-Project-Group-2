transmute(Males = "Males", Average = mean(Total.HHA.Medicare.Payment.Amount..non.LUPA.))
MalesVFemales <- tibble(
Sex = c("Male", "Female"),
Average_Paid_By_Medicare = c("$2,000,043", "$651,380.6")%>%
add_column(Title = "Average paid by Medicare for Home Health Agencies based on if more Males or Female Beneficiaries are Present")
)
hhaData2015Females <-  hhadatahhrg2015.untidy %>%
select("Provider.ID", "Male.Beneficiaries", "Female.Beneficiaries", "Total.HHA.Medicare.Payment.Amount..non.LUPA." ) %>%
filter(!Male.Beneficiaries>Female.Beneficiaries) %>%
transmute(Females = "Females", Average = mean(Total.HHA.Medicare.Payment.Amount..non.LUPA.))
hhaData2015Males <-  hhadatahhrg2015.untidy %>%
select("Provider.ID", "Male.Beneficiaries", "Female.Beneficiaries", "Total.HHA.Medicare.Payment.Amount..non.LUPA." ) %>%
filter(Male.Beneficiaries>Female.Beneficiaries) %>%
transmute(Males = "Males", Average = mean(Total.HHA.Medicare.Payment.Amount..non.LUPA.))
MalesVFemales <- tibble(
Sex = c("Male", "Female"),
Average_Paid_By_Medicare = c("$2,000,043", "$651,380.6")
)
html_table <- kable(MalesVFemales, format = "html")
library(knitr)
hhaData2015Females <-  hhadatahhrg2015.untidy %>%
select("Provider.ID", "Male.Beneficiaries", "Female.Beneficiaries", "Total.HHA.Medicare.Payment.Amount..non.LUPA." ) %>%
filter(!Male.Beneficiaries>Female.Beneficiaries) %>%
transmute(Females = "Females", Average = mean(Total.HHA.Medicare.Payment.Amount..non.LUPA.))
hhaData2015Males <-  hhadatahhrg2015.untidy %>%
select("Provider.ID", "Male.Beneficiaries", "Female.Beneficiaries", "Total.HHA.Medicare.Payment.Amount..non.LUPA." ) %>%
filter(Male.Beneficiaries>Female.Beneficiaries) %>%
transmute(Males = "Males", Average = mean(Total.HHA.Medicare.Payment.Amount..non.LUPA.))
MalesVFemales <- tibble(
Sex = c("Male", "Female"),
Average_Paid_By_Medicare = c("$2,000,043", "$651,380.6")
)
html_table <- kable(MalesVFemales, format = "html")
hhaData2015Females <-  hhadatahhrg2015.untidy %>%
select("Provider.ID", "Male.Beneficiaries", "Female.Beneficiaries", "Total.HHA.Medicare.Payment.Amount..non.LUPA." ) %>%
filter(!Male.Beneficiaries>Female.Beneficiaries) %>%
transmute(Females = "Females", Average = mean(Total.HHA.Medicare.Payment.Amount..non.LUPA.))
hhaData2015Males <-  hhadatahhrg2015.untidy %>%
select("Provider.ID", "Male.Beneficiaries", "Female.Beneficiaries", "Total.HHA.Medicare.Payment.Amount..non.LUPA." ) %>%
filter(Male.Beneficiaries>Female.Beneficiaries) %>%
transmute(Males = "Males", Average = mean(Total.HHA.Medicare.Payment.Amount..non.LUPA.))
MalesVFemales <- tibble(
Sex = c("Male", "Female"),
Average_Paid_By_Medicare = c("$2,000,043", "$651,380.6")
)
MalesVFemaleshtml <- kable(MalesVFemales, format = "html")
MalesVFemaleshtml
hhaData2015Females <-  hhadatahhrg2015.untidy %>%
select("Provider.ID", "Male.Beneficiaries", "Female.Beneficiaries", "Total.HHA.Medicare.Payment.Amount..non.LUPA." ) %>%
filter(!Male.Beneficiaries>Female.Beneficiaries) %>%
transmute(Females = "Females", Average = mean(Total.HHA.Medicare.Payment.Amount..non.LUPA.))
hhaData2015Males <-  hhadatahhrg2015.untidy %>%
select("Provider.ID", "Male.Beneficiaries", "Female.Beneficiaries", "Total.HHA.Medicare.Payment.Amount..non.LUPA." ) %>%
filter(Male.Beneficiaries>Female.Beneficiaries) %>%
transmute(Males = "Males", Average = mean(Total.HHA.Medicare.Payment.Amount..non.LUPA.))
MalesVFemales <- tibble(
Sex = c("Male", "Female"),
Average_Paid_By_Medicare = c("$2,000,043", "$651,380.6")
)
MalesVFemaleshtml <- kable(MalesVFemales, format = "html", caption = "Average paid by Medicare for Home Health Agencies based on if more Males or Female Beneficiaries are Present")
MalesVFemaleshtml
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(knitr)
setwd("C:/Users/dylan/Documents/GitHub/Data-Science-Final-Project-Group-2")
hhadata2015.untidy = read.csv("CSVs/medicare-home-health-agency-hha-hhrg-aggregate-report-cy-2015.csv")
hhadatastates2015.untidy = read.csv("CSVs/medicare-home-health-agency-hha-hhrg-by-state-aggregate-report-cy-2015.csv")
hhadatahhrg2015.untidy = read.csv("CSVs/medicare-home-health-agency-hha-provider-aggregate-report-cy-2015.csv")
hha_2015 <- read.csv("CSVs/medicare-home-health-agency-hha-provider-aggregate-report-cy-2015.csv")
hha_2015 %>% rename( "distinct"="Distinct.Beneficiaries..non.LUPA.") %>% mutate(actual_with_cancer =Percent.of.Beneficiaries.with.Cancer * .01 * distinct) %>%ggplot() + geom_point(aes(x = actual_with_cancer, y=Total.HHA.Charge.Amount..non.LUPA.))
hha_2015 %>% rename( "distinct"="Distinct.Beneficiaries..non.LUPA.") %>% mutate(actual_with_Atrial.Fibrillation =Percent.of.Beneficiaries.with.Atrial.Fibrillation * .01 * distinct) %>%ggplot() + geom_point(aes(x = actual_with_Atrial.Fibrillation, y=Total.HHA.Charge.Amount..non.LUPA.))
hha_2015 %>% rename( "distinct"="Distinct.Beneficiaries..non.LUPA.") %>% mutate(actual_with_cancer =Percent.of.Beneficiaries.with.Cancer * .01 * distinct) %>%ggplot() + geom_point(aes(x = actual_with_cancer, y=Total.HHA.Charge.Amount..non.LUPA.))
hha_2015 %>% rename( "distinct"="Distinct.Beneficiaries..non.LUPA.") %>% mutate(actual_with_Atrial.Fibrillation =Percent.of.Beneficiaries.with.Atrial.Fibrillation * .01 * distinct) %>%ggplot() + geom_point(aes(x = actual_with_Atrial.Fibrillation, y=Total.HHA.Charge.Amount..non.LUPA.))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(knitr)
setwd("C:/Users/dylan/Documents/GitHub/Data-Science-Final-Project-Group-2")
hhadata2015.untidy = read.csv("CSVs/medicare-home-health-agency-hha-hhrg-aggregate-report-cy-2015.csv")
hhadatastates2015.untidy = read.csv("CSVs/medicare-home-health-agency-hha-hhrg-by-state-aggregate-report-cy-2015.csv")
hhadatahhrg2015.untidy = read.csv("CSVs/medicare-home-health-agency-hha-provider-aggregate-report-cy-2015.csv")
hha_2015 <- read.csv("CSVs/medicare-home-health-agency-hha-provider-aggregate-report-cy-2015.csv")
hhadata2015 <- hhadata2015.untidy %>%
select("HHRG", "Total.Episodes", "Total.HHA.Medicare.Payment.Amount", "Average.HHA.Medicare.Payment.Amount")
ggplot(hhadata2015, aes(x = HHRG, y = Total.HHA.Medicare.Payment.Amount)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(y = "Avergae Medicare Payment") +
scale_x_discrete(guide = guide_axis(n.dodge=15)) +
theme_minimal()
hhaStateData2015 <- hhadatastates2015.untidy %>%
select("State", "Average.HHA.Charge.Amount", "Total.Episodes" )
ggplot(hhaStateData2015, aes(x = State, y = Total.Episodes)) +
geom_point() +
labs(y = "Total Episodes per HHRG") +
scale_x_discrete(guide = guide_axis(n.dodge=2)) +
theme_minimal()
ggplot(hhaStateData2015, aes(x= State, y = Average.HHA.Charge.Amount)) +
geom_boxplot() +
scale_x_discrete(guide = guide_axis(n.dodge=2)) +
theme_minimal()
ggplot(hhadata2015, aes(x=HHRG, y = Average.HHA.Medicare.Payment.Amount)) +
geom_point() +
scale_x_discrete(guide = guide_axis(n.dodge=15))
hha_2015 %>% rename( "distinct"="Distinct.Beneficiaries..non.LUPA.") %>% mutate(actual_with_cancer =Percent.of.Beneficiaries.with.Cancer * .01 * distinct) %>%ggplot() + geom_point(aes(x = actual_with_cancer, y=Total.HHA.Charge.Amount..non.LUPA.))
hha_2015 %>% rename( "distinct"="Distinct.Beneficiaries..non.LUPA.") %>% mutate(actual_with_Atrial.Fibrillation =Percent.of.Beneficiaries.with.Atrial.Fibrillation * .01 * distinct) %>%ggplot() + geom_point(aes(x = actual_with_Atrial.Fibrillation, y=Total.HHA.Charge.Amount..non.LUPA.))
hhaData2015Females <-  hhadatahhrg2015.untidy %>%
select("Provider.ID", "Male.Beneficiaries", "Female.Beneficiaries", "Total.HHA.Medicare.Payment.Amount..non.LUPA." ) %>%
filter(!Male.Beneficiaries>Female.Beneficiaries) %>%
transmute(Females = "Females", Average = mean(Total.HHA.Medicare.Payment.Amount..non.LUPA.))
hhaData2015Males <-  hhadatahhrg2015.untidy %>%
select("Provider.ID", "Male.Beneficiaries", "Female.Beneficiaries", "Total.HHA.Medicare.Payment.Amount..non.LUPA." ) %>%
filter(Male.Beneficiaries>Female.Beneficiaries) %>%
transmute(Males = "Males", Average = mean(Total.HHA.Medicare.Payment.Amount..non.LUPA.))
MalesVFemales <- tibble(
Sex = c("Male", "Female"),
Average_Paid_By_Medicare = c("$2,000,043", "$651,380.6")
)
MalesVFemaleshtml <- kable(MalesVFemales, format = "html", caption = "Average paid by Medicare for Home Health Agencies based on if more Males or Female Beneficiaries are Present")
MalesVFemaleshtml
#
#
hha_2015 %>% rename( "distinct"="Distinct.Beneficiaries..non.LUPA.") %>% mutate(actual_with_cancer =Percent.of.Beneficiaries.with.Cancer * .01 * distinct) %>%ggplot() + geom_point(aes(x = actual_with_cancer, y=Total.HHA.Charge.Amount..non.LUPA.))
hha_2015 %>% rename( "distinct"="Distinct.Beneficiaries..non.LUPA.") %>% mutate(actual_with_Atrial.Fibrillation =Percent.of.Beneficiaries.with.Atrial.Fibrillation * .01 * distinct) %>%ggplot() + geom_point(aes(x = actual_with_Atrial.Fibrillation, y=Total.HHA.Charge.Amount..non.LUPA.))
hhaData2015Females <-  hhadatahhrg2015.untidy %>%
select("Provider.ID", "Male.Beneficiaries", "Female.Beneficiaries", "Total.HHA.Medicare.Payment.Amount..non.LUPA." ) %>%
filter(!Male.Beneficiaries>Female.Beneficiaries) %>%
filter(!Male.Benediciaries - Female.Beneficiares < 10)
hhaData2015Females <-  hhadatahhrg2015.untidy %>%
select("Provider.ID", "Male.Beneficiaries", "Female.Beneficiaries", "Total.HHA.Medicare.Payment.Amount..non.LUPA." ) %>%
filter(!Male.Beneficiaries>Female.Beneficiaries) %>%
filter(!Male.Beneficiaries - Female.Beneficiaries < 10)
transmute(Females = "Females", Average = mean(Total.HHA.Medicare.Payment.Amount..non.LUPA.))
hhaData2015Females <-  hhadatahhrg2015.untidy %>%
select("Provider.ID", "Male.Beneficiaries", "Female.Beneficiaries", "Total.HHA.Medicare.Payment.Amount..non.LUPA." ) %>%
filter(!Male.Beneficiaries>Female.Beneficiaries) %>%
filter(!Male.Beneficiaries - Female.Beneficiaries < 10)
transmute(Females = "Females", Average = mean(Total.HHA.Medicare.Payment.Amount..non.LUPA.))
hhaData2015Females <-  hhadatahhrg2015.untidy %>%
select("Provider.ID", "Male.Beneficiaries", "Female.Beneficiaries", "Total.HHA.Medicare.Payment.Amount..non.LUPA." ) %>%
filter(!Male.Beneficiaries>Female.Beneficiaries) %>%
filter(!Male.Beneficiaries - Female.Beneficiaries < 10) %>%
transmute(Females = "Females", Average = mean(Total.HHA.Medicare.Payment.Amount..non.LUPA.))
hhaData2015Males <-  hhadatahhrg2015.untidy %>%
select("Provider.ID", "Male.Beneficiaries", "Female.Beneficiaries", "Total.HHA.Medicare.Payment.Amount..non.LUPA." ) %>%
filter(Male.Beneficiaries>Female.Beneficiaries) %>%
transmute(Males = "Males", Average = mean(Total.HHA.Medicare.Payment.Amount..non.LUPA.))
MalesVFemales <- tibble(
Sex = c("More Males", "More Females"),
Average_Paid_By_Medicare = c("$2,000,043", "$651,380.6")
)
MalesVFemaleshtml <- kable(MalesVFemales, format = "html", caption = "Average paid by Medicare for Home Health Agencies based on if more Males or Female Beneficiaries are Present")
MalesVFemaleshtml
hhaData2015Females <-  hhadatahhrg2015.untidy %>%
select("Provider.ID", "Male.Beneficiaries", "Female.Beneficiaries", "Total.HHA.Medicare.Payment.Amount..non.LUPA." ) %>%
filter(!Male.Beneficiaries>Female.Beneficiaries) %>%
filter(!Female.Beneficiaries - Male.Beneficiaries < 10) %>%
transmute(Females = "Females", Average = mean(Total.HHA.Medicare.Payment.Amount..non.LUPA.))
hhaData2015Males <-  hhadatahhrg2015.untidy %>%
select("Provider.ID", "Male.Beneficiaries", "Female.Beneficiaries", "Total.HHA.Medicare.Payment.Amount..non.LUPA." ) %>%
filter(Male.Beneficiaries>Female.Beneficiaries) %>%
filter(!Male.Beneficiaries - Female.Beneficiaries < 10) %>%
transmute(Males = "Males", Average = mean(Total.HHA.Medicare.Payment.Amount..non.LUPA.))
MalesVFemales <- tibble(
Sex = c("More Males", "More Females"),
Average_Paid_By_Medicare = c("$2,000,043", "$651,380.6")
)
MalesVFemaleshtml <- kable(MalesVFemales, format = "html", caption = "Average paid by Medicare for Home Health Agencies based on if more Males or Female Beneficiaries are Present")
MalesVFemaleshtml
hhaData2015Males
hhaData2015Females
?hhadatahhrg2015.untidy
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(knitr)
setwd("C:/Users/dylan/Documents/GitHub/Data-Science-Final-Project-Group-2")
hhadata2015.untidy = read.csv("CSVs/medicare-home-health-agency-hha-hhrg-aggregate-report-cy-2015.csv")
hhadatastates2015.untidy = read.csv("CSVs/medicare-home-health-agency-hha-hhrg-by-state-aggregate-report-cy-2015.csv")
hhadatahhrg2015.untidy = read.csv("CSVs/medicare-home-health-agency-hha-provider-aggregate-report-cy-2015.csv")
hha_2015 <- read.csv("CSVs/medicare-home-health-agency-hha-provider-aggregate-report-cy-2015.csv")
hhadata2015 <- hhadata2015.untidy %>%
select("HHRG", "Total.Episodes", "Total.HHA.Medicare.Payment.Amount", "Average.HHA.Medicare.Payment.Amount")
ggplot(hhadata2015, aes(x = HHRG, y = Total.HHA.Medicare.Payment.Amount)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(y = "Avergae Medicare Payment") +
scale_x_discrete(guide = guide_axis(n.dodge=15)) +
theme_minimal()
hhaStateData2015 <- hhadatastates2015.untidy %>%
select("State", "Average.HHA.Charge.Amount", "Total.Episodes" )
ggplot(hhaStateData2015, aes(x = State, y = Total.Episodes)) +
geom_point() +
labs(y = "Total Episodes per HHRG") +
scale_x_discrete(guide = guide_axis(n.dodge=2)) +
theme_minimal()
ggplot(hhaStateData2015, aes(x= State, y = Average.HHA.Charge.Amount)) +
geom_boxplot() +
scale_x_discrete(guide = guide_axis(n.dodge=2)) +
theme_minimal()
ggplot(hhadata2015, aes(x=HHRG, y = Average.HHA.Medicare.Payment.Amount)) +
geom_point() +
scale_x_discrete(guide = guide_axis(n.dodge=15))
hha_2015 %>% rename( "distinct"="Distinct.Beneficiaries..non.LUPA.") %>% mutate(actual_with_cancer =Percent.of.Beneficiaries.with.Cancer * .01 * distinct) %>%ggplot() + geom_point(aes(x = actual_with_cancer, y=Total.HHA.Charge.Amount..non.LUPA.))
hha_2015 %>% rename( "distinct"="Distinct.Beneficiaries..non.LUPA.") %>% mutate(actual_with_Atrial.Fibrillation =Percent.of.Beneficiaries.with.Atrial.Fibrillation * .01 * distinct) %>%ggplot() + geom_point(aes(x = actual_with_Atrial.Fibrillation, y=Total.HHA.Charge.Amount..non.LUPA.))
?hhadatahhrg2015.untidy
hhaData2015Females <-  hhadatahhrg2015.untidy %>%
select("Provider.ID", "Male.Beneficiaries", "Female.Beneficiaries", "Total.HHA.Medicare.Payment.Amount..non.LUPA." ) %>%
filter(!Male.Beneficiaries>Female.Beneficiaries) %>%
filter(!Female.Beneficiaries - Male.Beneficiaries < 10) %>%
transmute(Females = "Females", Average = mean(Total.HHA.Medicare.Payment.Amount..non.LUPA.))
hhaData2015Males <-  hhadatahhrg2015.untidy %>%
select("Provider.ID", "Male.Beneficiaries", "Female.Beneficiaries", "Total.HHA.Medicare.Payment.Amount..non.LUPA." ) %>%
filter(Male.Beneficiaries>Female.Beneficiaries) %>%
filter(!Male.Beneficiaries - Female.Beneficiaries < 10) %>%
transmute(Males = "Males", Average = mean(Total.HHA.Medicare.Payment.Amount..non.LUPA.))
MalesVFemales <- tibble(
Sex = c("More Males", "More Females"),
Average_Paid_By_Medicare = c("$2,191,278", "$918,996.2")
)
MalesVFemaleshtml <- kable(MalesVFemales, format = "html", caption = "Average paid by Medicare for Home Health Agencies based on if more Males or Female Beneficiaries are Present")
MalesVFemaleshtml
#
hhaData2015.F2 <- hhadatahhrg2015.untidy %>%
select()
?hhadatahhrg2015.untidy
ls(hhadatahhrg2015.untidy)
hhaData2015Females <-  hhadatahhrg2015.untidy %>%
select("Provider.ID", "Male.Beneficiaries", "Female.Beneficiaries", "Total.HHA.Medicare.Payment.Amount..non.LUPA." ) %>%
filter(!Male.Beneficiaries>Female.Beneficiaries) %>%
filter(!Female.Beneficiaries - Male.Beneficiaries < 10) %>%
transmute(Females = "Females", Average = mean(Total.HHA.Medicare.Payment.Amount..non.LUPA.))
hhaData2015Males <-  hhadatahhrg2015.untidy %>%
select("Provider.ID", "Male.Beneficiaries", "Female.Beneficiaries", "Total.HHA.Medicare.Payment.Amount..non.LUPA." ) %>%
filter(Male.Beneficiaries>Female.Beneficiaries) %>%
filter(!Male.Beneficiaries - Female.Beneficiaries < 10) %>%
transmute(Males = "Males", Average = mean(Total.HHA.Medicare.Payment.Amount..non.LUPA.))
MalesVFemales <- tibble(
Sex = c("More Males", "More Females"),
Average_Paid_By_Medicare = c("$2,191,278", "$918,996.2")
)
MalesVFemaleshtml <- kable(MalesVFemales, format = "html", caption = "Average paid by Medicare for Home Health Agencies based on if more Males or Female Beneficiaries are Present by 10")
MalesVFemaleshtml
hhadatahhrg2015.untidy
ls(hhadata2015.untidy)
ls(hhadatahhrg2015.untidy)
hhaData2015.F2 <- hhadatahhrg2015.untidy %>%
select("Agency.Name", "Total.HHA.Medicare.Payment.Amount..non.LUPA.", "Female.Beneficiaries", "Male.Beneficiaries")
hhaData2015.F2 <- hhadatahhrg2015.untidy %>%
select("Agency.Name", "Total.HHA.Medicare.Payment.Amount..non.LUPA.", "Female.Beneficiaries", "Male.Beneficiaries") %>%
mutate(Differnece_In_Males_and_Females = Male.Beneficiaries - Female.Beneficiaries)
hhaData2015.F2
hhaData2015.F2 <- hhadatahhrg2015.untidy %>%
select("Agency.Name", "Total.HHA.Medicare.Payment.Amount..non.LUPA.", "Female.Beneficiaries", "Male.Beneficiaries") %>%
mutate(Differnece_In_Males_and_Females = Male.Beneficiaries - Female.Beneficiaries) %>%
arrange(desc(Differnece_In_Males_and_Females))
hhaData2015.F2
hhaData2015Females <-  hhadatahhrg2015.untidy %>%
select("Provider.ID", "Male.Beneficiaries", "Female.Beneficiaries", "Total.HHA.Medicare.Payment.Amount..non.LUPA." ) %>%
filter(!Male.Beneficiaries>Female.Beneficiaries) %>%
filter(!Female.Beneficiaries - Male.Beneficiaries < 10) %>%
transmute(Females = "Females", Average = mean(Total.HHA.Medicare.Payment.Amount..non.LUPA.))
hhaData2015Males <-  hhadatahhrg2015.untidy %>%
select("Provider.ID", "Male.Beneficiaries", "Female.Beneficiaries", "Total.HHA.Medicare.Payment.Amount..non.LUPA." ) %>%
filter(Male.Beneficiaries>Female.Beneficiaries) %>%
filter(!Male.Beneficiaries - Female.Beneficiaries < 10) %>%
transmute(Males = "Males", Average = mean(Total.HHA.Medicare.Payment.Amount..non.LUPA.))
MalesVFemales <- tibble(
Sex = c("More Males", "More Females"),
Average_Paid_By_Medicare = c("$2,191,278", "$918,996.2")
)
MalesVFemaleshtml <- kable(MalesVFemales, format = "html", caption = "Average paid by Medicare for Home Health Agencies based on if more Males or Female Beneficiaries are Present by 10")
MalesVFemaleshtml
hhaData2015.F2 <- hhadatahhrg2015.untidy %>%
select("Agency.Name", "Total.HHA.Medicare.Payment.Amount..non.LUPA.", "Female.Beneficiaries", "Male.Beneficiaries") %>%
mutate(Differnece_In_Males_and_Females = Male.Beneficiaries - Female.Beneficiaries) %>%
arrange(desc(Differnece_In_Males_and_Females))
ggplot(hhaData2015.F2, aes(x = Differnece_In_Males_and_Females, y = Total.HHA.Medicare.Payment.Amount..non.LUPA.)) +
geom_histogram(binwidth = 10)
hhaData2015.F2 <- hhadatahhrg2015.untidy %>%
select("Agency.Name", "Total.HHA.Medicare.Payment.Amount..non.LUPA.", "Female.Beneficiaries", "Male.Beneficiaries") %>%
mutate(Differnece_In_Males_and_Females = Male.Beneficiaries - Female.Beneficiaries) %>%
arrange(desc(Differnece_In_Males_and_Females))
ggplot(hhaData2015.F2, aes(x = Differnece_In_Males_and_Females, y = Total.HHA.Medicare.Payment.Amount..non.LUPA.)) +
geom_line()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(knitr)
setwd("C:/Users/dylan/Documents/GitHub/Data-Science-Final-Project-Group-2")
hhadata2015.untidy = read.csv("CSVs/medicare-home-health-agency-hha-hhrg-aggregate-report-cy-2015.csv")
hhadatastates2015.untidy = read.csv("CSVs/medicare-home-health-agency-hha-hhrg-by-state-aggregate-report-cy-2015.csv")
hhadatahhrg2015.untidy = read.csv("CSVs/medicare-home-health-agency-hha-provider-aggregate-report-cy-2015.csv")
hha_2015 <- read.csv("CSVs/medicare-home-health-agency-hha-provider-aggregate-report-cy-2015.csv")
hha_2014 <- read.csv("CSVs/medicare-home-health-agency-hha-provider-aggregate-report-cy-2014.csv")
hha_2013 <- read.csv("CSVs/medicare-home-health-provider-aggregate-table-cy-2013.csv")
hha_2015_q2 <- hha_2015 %>% select( (1:5), (16:19), 37)
hha_2014_q2 <- hha_2014%>% select( (1:5), (16:19), 37) %>% rename("Total.HHA.Charge.Amount..non.LUPA_2014" = "Total.HHA.Charge.Amount..non.LUPA.") %>% select(Provider.ID, Total.HHA.Charge.Amount..non.LUPA_2014)
hha_2013_q2 <- hha_2013%>% select( (1:5), (16:19), 37) %>% rename("Total.HHA.Charge.Amount..non.LUPA_2013" = "Total.HHA.Charge.Amount..non.LUPA.") %>% select(Provider.ID, Total.HHA.Charge.Amount..non.LUPA_2013)
hha_allyear<- hha_2015_q2 %>% inner_join(hha_2014_q2, "Provider.ID") %>% inner_join(hha_2013_q2, "Provider.ID") %>% select((1:6), (11:12)) %>% rename("2015" = "Total.HHA.Charge.Amount..non.LUPA.", "2014" = "Total.HHA.Charge.Amount..non.LUPA_2014", "2013" = "Total.HHA.Charge.Amount..non.LUPA_2013")
hha_allyear_graph <- hha_allyear %>% gather(`2015`, `2013`, `2014`, key  = Year, value = HHA_charge, convert = TRUE)
hha_allyear_graph
ggplot(hha_allyear_graph) + geom_line(aes(x=Year,y=HHA_charge, group = Provider.ID)) + guides(color=F) +
scale_x_discrete(breaks=c(2013, 2014, 2015),labels=c(2013, 2014, 2015)) + theme_minimal()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(knitr)
setwd("C:/Users/dylan/Documents/GitHub/Data-Science-Final-Project-Group-2")
hhadata2015.untidy = read.csv("CSVs/medicare-home-health-agency-hha-hhrg-aggregate-report-cy-2015.csv")
hhadatastates2015.untidy = read.csv("CSVs/medicare-home-health-agency-hha-hhrg-by-state-aggregate-report-cy-2015.csv")
hhadatahhrg2015.untidy = read.csv("CSVs/medicare-home-health-agency-hha-provider-aggregate-report-cy-2015.csv")
hha_2015 <- read.csv("CSVs/medicare-home-health-agency-hha-provider-aggregate-report-cy-2015.csv")
hha_2014 <- read.csv("CSVs/medicare-home-health-agency-hha-provider-aggregate-report-cy-2014.csv")
hha_2013 <- read.csv("CSVs/medicare-home-health-provider-aggregate-table-cy-2013.csv")
hha_2015 %>% rename( "distinct"="Distinct.Beneficiaries..non.LUPA.") %>% mutate(actual_with_cancer =Percent.of.Beneficiaries.with.Cancer * .01 * distinct) %>%ggplot() + geom_point(aes(x = actual_with_cancer, y=Total.HHA.Charge.Amount..non.LUPA.)) %>%
labs(x = "Number People with Cancer")
hha_2015 %>% rename( "distinct"="Distinct.Beneficiaries..non.LUPA.") %>% mutate(actual_with_Atrial.Fibrillation =Percent.of.Beneficiaries.with.Atrial.Fibrillation * .01 * distinct) %>%ggplot() + geom_point(aes(x = actual_with_Atrial.Fibrillation, y=Total.HHA.Charge.Amount..non.LUPA.))
hha_2015 %>% rename( "distinct"="Distinct.Beneficiaries..non.LUPA.") %>% mutate(actual_with_cancer =Percent.of.Beneficiaries.with.Cancer * .01 * distinct) %>%ggplot() + geom_point(aes(x = actual_with_cancer, y=Total.HHA.Charge.Amount..non.LUPA.)) %>%
labs(x = "Number People with Cancer" y = "Total HHA Charge Non-LUPA")
hha_2015 %>% rename( "distinct"="Distinct.Beneficiaries..non.LUPA.") %>% mutate(actual_with_cancer =Percent.of.Beneficiaries.with.Cancer * .01 * distinct) %>%ggplot() + geom_point(aes(x = actual_with_cancer, y=Total.HHA.Charge.Amount..non.LUPA.)) %>%
labs(x = "Number People with Cancer", y = "Total HHA Charge Non-LUPA")
hha_2015 %>% rename( "distinct"="Distinct.Beneficiaries..non.LUPA.") %>% mutate(actual_with_Atrial.Fibrillation =Percent.of.Beneficiaries.with.Atrial.Fibrillation * .01 * distinct) %>%ggplot() + geom_point(aes(x = actual_with_Atrial.Fibrillation, y=Total.HHA.Charge.Amount..non.LUPA.))
hha_2015 %>% rename( "distinct"="Distinct.Beneficiaries..non.LUPA.") %>% mutate(actual_with_cancer =Percent.of.Beneficiaries.with.Cancer * .01 * distinct) %>%ggplot() + geom_point(aes(x = actual_with_cancer, y=Total.HHA.Charge.Amount..non.LUPA.))
hha_2015 %>% rename( "distinct"="Distinct.Beneficiaries..non.LUPA.") %>% mutate(actual_with_Atrial.Fibrillation =Percent.of.Beneficiaries.with.Atrial.Fibrillation * .01 * distinct) %>%ggplot() + geom_point(aes(x = actual_with_Atrial.Fibrillation, y=Total.HHA.Charge.Amount..non.LUPA.))
hha_2015 %>% rename( "distinct"="Distinct.Beneficiaries..non.LUPA.") %>% mutate(actual_with_cancer =Percent.of.Beneficiaries.with.Cancer * .01 * distinct) %>%ggplot() + geom_point(aes(x = actual_with_cancer, y=Total.HHA.Charge.Amount..non.LUPA.)) +
labs(x = "Number People with Cancer", y = "Total HHA Charge Non-LUPA")
hha_2015 %>% rename( "distinct"="Distinct.Beneficiaries..non.LUPA.") %>% mutate(actual_with_Atrial.Fibrillation =Percent.of.Beneficiaries.with.Atrial.Fibrillation * .01 * distinct) %>%ggplot() + geom_point(aes(x = actual_with_Atrial.Fibrillation, y=Total.HHA.Charge.Amount..non.LUPA.))
hha_2015 %>% rename( "distinct"="Distinct.Beneficiaries..non.LUPA.") %>% mutate(actual_with_cancer =Percent.of.Beneficiaries.with.Cancer * .01 * distinct) %>%ggplot() + geom_point(aes(x = actual_with_cancer, y=Total.HHA.Charge.Amount..non.LUPA.)) +
labs(x = "Number People with Cancer", y = "Total HHA Charge Non-LUPA")
hha_2015 %>% rename( "distinct"="Distinct.Beneficiaries..non.LUPA.") %>% mutate(actual_with_Atrial.Fibrillation =Percent.of.Beneficiaries.with.Atrial.Fibrillation * .01 * distinct) %>%ggplot() + geom_point(aes(x = actual_with_Atrial.Fibrillation, y=Total.HHA.Charge.Amount..non.LUPA.))+
labs(x = "Number People with Atrial Fibrillation", y = "Total HHA Charge Non-LUPA")
hha_2015_q2 <- hha_2015 %>% select( (1:5), (16:19), 37)
hha_2014_q2 <- hha_2014%>% select( (1:5), (16:19), 37) %>% rename("Total.HHA.Charge.Amount..non.LUPA_2014" = "Total.HHA.Charge.Amount..non.LUPA.") %>% select(Provider.ID, Total.HHA.Charge.Amount..non.LUPA_2014)
hha_2013_q2 <- hha_2013%>% select( (1:5), (16:19), 37) %>% rename("Total.HHA.Charge.Amount..non.LUPA_2013" = "Total.HHA.Charge.Amount..non.LUPA.") %>% select(Provider.ID, Total.HHA.Charge.Amount..non.LUPA_2013)
hha_allyear<- hha_2015_q2 %>% inner_join(hha_2014_q2, "Provider.ID") %>% inner_join(hha_2013_q2, "Provider.ID") %>% select((1:6), (11:12)) %>% rename("2015" = "Total.HHA.Charge.Amount..non.LUPA.", "2014" = "Total.HHA.Charge.Amount..non.LUPA_2014", "2013" = "Total.HHA.Charge.Amount..non.LUPA_2013")
hha_allyear_graph <- hha_allyear %>% gather(`2015`, `2013`, `2014`, key  = Year, value = HHA_charge, convert = TRUE)
ggplot(hha_allyear_graph) + geom_line(aes(x=Year,y=HHA_charge, group = Provider.ID)) + guides(color=F) +
scale_x_discrete(breaks=c(2013, 2014, 2015),labels=c(2013, 2014, 2015)) + theme_minimal() +
labs(x = "Year (2013-2015)", y = "Total HHA Charge Non-LUPA")
hhaData2015.F2 <- hhadatahhrg2015.untidy %>%
select("Agency.Name", "Total.HHA.Medicare.Payment.Amount..non.LUPA.", "Female.Beneficiaries", "Male.Beneficiaries") %>%
mutate(Differnece_In_Males_and_Females = Male.Beneficiaries - Female.Beneficiaries) %>%
arrange(desc(Differnece_In_Males_and_Females))
ggplot(hhaData2015.F2, aes(x = Differnece_In_Males_and_Females, y = Total.HHA.Medicare.Payment.Amount..non.LUPA.)) +
geom_line() +
labs(x = "Difference in Males and Females per HHA", y = "HHA Medicare Payment Non-LUPA")
hhadata2015 <- hhadata2015.untidy %>%
select("HHRG", "Total.Episodes", "Total.HHA.Medicare.Payment.Amount", "Average.HHA.Medicare.Payment.Amount")
ggplot(hhadata2015, aes(x = HHRG, y = Total.HHA.Medicare.Payment.Amount)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(y = "Avergae Medicare Payment") +
scale_x_discrete(guide = guide_axis(n.dodge=15)) +
theme_minimal()
hhaData2015Males
hhaData2015Females <-  hhadatahhrg2015.untidy %>%
select("Provider.ID", "Male.Beneficiaries", "Female.Beneficiaries", "Total.HHA.Medicare.Payment.Amount..non.LUPA." ) %>%
filter(!Male.Beneficiaries>Female.Beneficiaries) %>%
filter(!Female.Beneficiaries - Male.Beneficiaries < 10) %>%
transmute(Females = "Females", Average = mean(Total.HHA.Medicare.Payment.Amount..non.LUPA.))
hhaData2015Males <-  hhadatahhrg2015.untidy %>%
select("Provider.ID", "Male.Beneficiaries", "Female.Beneficiaries", "Total.HHA.Medicare.Payment.Amount..non.LUPA." ) %>%
filter(Male.Beneficiaries>Female.Beneficiaries) %>%
filter(!Male.Beneficiaries - Female.Beneficiaries < 10) %>%
transmute(Males = "Males", Average = mean(Total.HHA.Medicare.Payment.Amount..non.LUPA.))
MalesVFemales <- tibble(
Sex = c("More Males", "More Females"),
Average_Paid_By_Medicare = c("$918,996.2", "$2,191,278")
)
MalesVFemaleshtml <- kable(MalesVFemales, format = "html", caption = "Average paid by Medicare for Home Health Agencies based on if more Males or Female Beneficiaries are Present by 10")
MalesVFemaleshtml
options(scipen=999)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
DELHI.TRAIN=as.tibble(read.csv("DailyDelhiClimateTrain.csv"))[-1462,]    #DO NOT CHANGE
DELHI.TEST=as.tibble(read.csv("DailyDelhiClimateTest.csv"))              #DO NOT CHANGE
head(DELHI.TRAIN)                                                        #DO NOT CHANGE
head(DELHI.TEST)                                                         #DO NOT CHANGE
OUT = DELHI.TRAIN %>%                                              #DO NOT CHANGE
separate(date,into=c("Year","Month","Day"),sep="-") %>%          #DO NOT CHANGE
mutate_at(1:3,as.numeric) %>%                                    #DO NOT CHANGE
rename("Temperature"="meantemp","Humidity"="humidity",           #DO NOT CHANGE
"Wind Speed"="wind_speed","Pressure"="meanpressure")      #DO NOT CHANGE
head(OUT) #DO NOT CHANGE
clean.func = function(data){
returnSet <- data %>%
separate(date, into = c("Year", "Month", "Day"), sep = "-") %>%
mutate(across(1:3, as.numeric)) %>%
rename("Temperature" = meantemp, "Humidity" = humidity,
"Wind Speed" = wind_speed, "Pressure" = meanpressure)
return(returnSet)
}
TRAIN.CLEAN=clean.func(DELHI.TRAIN) #DO NOT CHANGE
TEST.CLEAN=clean.func(DELHI.TEST) #DO NOT CHANGE
head(TRAIN.CLEAN) #DO NOT CHANGE
head(TEST.CLEAN) #DO NOT CHANGE
month=c(1,2,2,1,2,2,1,2,1,2)  #DO NOT CHANGE
if(month[1]==1){          #DO NOT CHANGE
month[1]="January"          #DO NOT CHANGE
} else if(month[1]==2){       #DO NOT CHANGE
month[1]="February"         #DO NOT CHANGE
}                         #DO NOT CHANGE
if(month[2]==1){          #DO NOT CHANGE
month[2]="January"          #DO NOT CHANGE
} else if(month[2]==2){       #DO NOT CHANGE
month[2]="February"         #DO NOT CHANGE
}                         #DO NOT CHANGE
print(month)                 #DO NOT CHANGE
month.func <- function(month) {
month_names <- c("January", "February", "March", "April", "May", "June",
"July", "August", "September", "October", "November", "December")
month = month_names[month]
return(month)
}
TRAIN.CLEAN.2=TRAIN.CLEAN #DO NOT CHANGE
TEST.CLEAN.2=TEST.CLEAN #DO NOT CHANGE
TRAIN.CLEAN.2$Month=month.func(TRAIN.CLEAN$Month) #DO NOT CHANGE
TEST.CLEAN.2$Month=month.func(TEST.CLEAN$Month) #DO NOT CHANGE
unique(TRAIN.CLEAN.2$Month) #DO NOT CHANGE
unique(TEST.CLEAN.2$Month) #DO NOT CHANGE
rep(c("Bill","Ted"),times=5)        #DO NOT CHANGE
rep(c("Bill","Ted"),each=2,times=4) #DO NOT CHANGE
rep(c("Bill","Ted"),length.out=11)  #DO NOT CHANGE
rep(c("Bill","Ted"),length.out=12)  #DO NOT CHANGE
TRAIN.CLEAN.3=TRAIN.CLEAN.2 #DO NOT CHANGE
TEST.CLEAN.3=TEST.CLEAN.2   #DO NOT CHANGE
TRAIN.CLEAN.3$Day = rep(c("Tuesday", "Wednesday", "Thursday", "Friday",
"Saturday", "Sunday", "Monday"),
length.out = nrow(TRAIN.CLEAN.3))
TEST.CLEAN.3$Day  = rep(c("Tuesday", "Wednesday", "Thursday", "Friday",
"Saturday", "Sunday", "Monday"),
length.out = nrow(TEST.CLEAN.3))
unique(TRAIN.CLEAN.3$Day[c(1,1461)]) #DO NOT CHANGE
unique(TEST.CLEAN.3$Day[c(1,114)]) #DO NOT CHANGE
cels.2.fahr = function(tempInCel){
tempInFah = (tempInCel * (9/5)) +32
return(tempInFah)
}
TRAIN.FINAL=TRAIN.CLEAN.3 #DO NOT CHANGE
TEST.FINAL=TEST.CLEAN.3   #DO NOT CHANGE
TRAIN.FINAL$Temperature=cels.2.fahr(TRAIN.CLEAN.3$Temperature) #DO NOT CHANGE
TEST.FINAL$Temperature=cels.2.fahr(TEST.CLEAN.3$Temperature) #DO NOT CHANGE
TRAIN.FINAL$Temperature[1:10] #DO NOT CHANGE
TEST.FINAL$Temperature[1:10] #DO NOT CHANGE
MEAN.TEMP.TRAIN=matrix(NA,12,7) #DO NOT CHANGE
rownames(MEAN.TEMP.TRAIN)=c("January","February","March","April","May","June",         #DO NOT CHANGE
"July","August","September","October","November","December")  #DO NOT CHANGE
colnames(MEAN.TEMP.TRAIN)=c("Monday","Tuesday","Wednesday",                            #DO NOT CHANGE
"Thursday","Friday","Saturday","Sunday")                      #DO NOT CHANGE
for(j in 1:12){    #DO NOT CHANGE
for(k in 1:7){   #DO NOT CHANGE
month <- rownames(MEAN.TEMP.TRAIN)[j]
day <- colnames(MEAN.TEMP.TRAIN)[k]
average_temp <- mean(TRAIN.FINAL$Temperature[TRAIN.FINAL$Month == month & TRAIN.FINAL$Day == day])
MEAN.TEMP.TRAIN[j, k] <- average_temp
}                #DO NOT CHANGE
}                  #DO NOT CHANGE
print(MEAN.TEMP.TRAIN) #DO NOT CHANGE
x=c(35,27,28,40)    #DO NOT CHANGE
range=max(x)-min(x) #DO NOT CHANGE
print(range)        #DO NOT CHANGE
RANGE.func <- function(c) {
range = max(c) - min(c)
return(range)
}
try=c(1,2,3,4,5)        #DO NOT CHANGE
print(try)              #DO NOT CHANGE
print(RANGE.func(try))  #DO NOT CHANGE
RANGE.MONTH.TRAIN <- apply(MEAN.TEMP.TRAIN, 1, RANGE.func)
RANGE.DAY.TRAIN <- apply(MEAN.TEMP.TRAIN, 2, RANGE.func)
print(RANGE.MONTH.TRAIN) #DO NOT CHANGE
print(RANGE.DAY.TRAIN) #DO NOT CHANGE
x=NULL   #DO NOT CHANGE
x=c(x,3) #DO NOT CHANGE
x=c(x,4) #DO NOT CHANGE
x=c(x,5) #DO NOT CHANGE
print(x) #DO NOT CHANGE
WEEKDAY.HUMIDITY=NULL #DO NOT CHANGE
WEEKEND.HUMIDITY=NULL #DO NOT CHANGE
weekend = c("Saturday", "Sunday")
for(j in 1:1461){   #DO NOT CHANGE
if (TRAIN.FINAL$Day[j] %in% weekend) {
WEEKEND.HUMIDITY <- append(WEEKEND.HUMIDITY, TRAIN.FINAL$Humidity[j])
} else {
WEEKDAY.HUMIDITY <- append(WEEKDAY.HUMIDITY, TRAIN.FINAL$Humidity[j])
}
}                   #DO NOT CHANGE
t.test(x=WEEKDAY.HUMIDITY,y=WEEKEND.HUMIDITY) #DO NOT CHANGE
TRAIN.FINAL$`Pressure Percent Change`=NA #DO NOT CHANGE
for (i in 2:nrow(TRAIN.FINAL)) {
pressure_today <- TRAIN.FINAL$Pressure[i]
pressure_yesterday <- lag(TRAIN.FINAL$Pressure)[i]
percent_change <- (pressure_today - pressure_yesterday) / pressure_yesterday
TRAIN.FINAL$`Pressure Percent Change`[i] <- percent_change
}
plot(TRAIN.FINAL$`Pressure Percent Change`,type="l") #DO NOT CHANGE
TRAIN.FINAL$`Pressure 3-Day Average`=NA #DO NOT CHANGE
for (i in 2:(nrow(TRAIN.FINAL) - 1)) {
pressure_today <- TRAIN.FINAL$Pressure[i]
pressure_yesterday <- lag(TRAIN.FINAL$Pressure)[i]
pressure_tomorrow <- lead(TRAIN.FINAL$Pressure)[i]
average_pressure <- (pressure_yesterday + pressure_today + pressure_tomorrow) / 3
TRAIN.FINAL$`Pressure 3-Day Average`[i] <- average_pressure
}
plot(TRAIN.FINAL$`Pressure 3-Day Average`,type="l") #DO NOT CHANGE
TRAIN.CLEAN.3=TRAIN.CLEAN.2 #DO NOT CHANGE
TEST.CLEAN.3=TEST.CLEAN.2   #DO NOT CHANGE
TRAIN.CLEAN.3$Day = rep(c("Tuesday", "Wednesday", "Thursday", "Friday",
"Saturday", "Sunday", "Monday"),
length.out = nrow(TRAIN.CLEAN.3))
TEST.CLEAN.3$Day  = rep(c("Sunday", "Monday", "Tuesday", "Wednesday",
"Thursday", "Friday", "Saturday"),
length.out = nrow(TEST.CLEAN.3))
unique(TRAIN.CLEAN.3$Day[c(1,1461)]) #DO NOT CHANGE
unique(TEST.CLEAN.3$Day[c(1,114)]) #DO NOT CHANGE
