scale_x_discrete(guide = guide_axis(n.dodge=2)) +
theme_minimal()
ggplot(hhadata2015, aes(x=HHRG, y = Average.HHA.Medicare.Payment.Amount)) +
geom_point() +
scale_x_discrete(guide = guide_axis(n.dodge=15))
hha_2015 %>% rename( "distinct"="Distinct.Beneficiaries..non.LUPA.") %>% mutate(actual_with_cancer =Percent.of.Beneficiaries.with.Cancer * .01 * distinct) %>%ggplot() + geom_point(aes(x = actual_with_cancer, y=Total.HHA.Charge.Amount..non.LUPA.)) +
labs(x = "Number People with Cancer", y = "Total HHA Charge Non-LUPA")
hha_2015 %>% rename( "distinct"="Distinct.Beneficiaries..non.LUPA.") %>% mutate(actual_with_Atrial.Fibrillation =Percent.of.Beneficiaries.with.Atrial.Fibrillation * .01 * distinct) %>%ggplot() + geom_point(aes(x = actual_with_Atrial.Fibrillation, y=Total.HHA.Charge.Amount..non.LUPA.))+
labs(x = "Number People with Atrial Fibrillation", y = "Total HHA Charge Non-LUPA")
hhaData2015Females <-  hhadatahhrg2015.untidy %>%
select("Provider.ID", "Male.Beneficiaries", "Female.Beneficiaries", "Total.HHA.Medicare.Payment.Amount..non.LUPA." ) %>%
filter(!Male.Beneficiaries>Female.Beneficiaries) %>%
filter(!Female.Beneficiaries - Male.Beneficiaries < 10) %>%
transmute(Females = "Females", Average = mean(Total.HHA.Medicare.Payment.Amount..non.LUPA.))
hhaData2015Males <-  hhadatahhrg2015.untidy %>%
select("Provider.ID", "Male.Beneficiaries", "Female.Beneficiaries", "Total.HHA.Medicare.Payment.Amount..non.LUPA." ) %>%
filter(Male.Beneficiaries>Female.Beneficiaries) %>%
filter(!Male.Beneficiaries - Female.Beneficiaries < 10) %>%
transmute(Males = "Males", Average = mean(Total.HHA.Medicare.Payment.Amount..non.LUPA.))
MalesVFemales <- tibble(
Sex = c("More Males", "More Females"),
Average_Paid_By_Medicare = c("$918,996.2", "$2,191,278")
)
MalesVFemaleshtml <- kable(MalesVFemales, format = "html", caption = "Average paid by Medicare for Home Health Agencies based on if more Males or Female Beneficiaries are Present by 10")
MalesVFemaleshtml
hha_2015_q2 <- hha_2015 %>% select( (1:5), (16:19), 37)
hha_2014_q2 <- hha_2014%>% select( (1:5), (16:19), 37) %>% rename("Total.HHA.Charge.Amount..non.LUPA_2014" = "Total.HHA.Charge.Amount..non.LUPA.") %>% select(Provider.ID, Total.HHA.Charge.Amount..non.LUPA_2014)
hha_2013_q2 <- hha_2013%>% select( (1:5), (16:19), 37) %>% rename("Total.HHA.Charge.Amount..non.LUPA_2013" = "Total.HHA.Charge.Amount..non.LUPA.") %>% select(Provider.ID, Total.HHA.Charge.Amount..non.LUPA_2013)
hha_allyear<- hha_2015_q2 %>% inner_join(hha_2014_q2, "Provider.ID") %>% inner_join(hha_2013_q2, "Provider.ID") %>% select((1:6), (11:12)) %>% rename("2015" = "Total.HHA.Charge.Amount..non.LUPA.", "2014" = "Total.HHA.Charge.Amount..non.LUPA_2014", "2013" = "Total.HHA.Charge.Amount..non.LUPA_2013")
hha_allyear_graph <- hha_allyear %>% gather(`2015`, `2013`, `2014`, key  = Year, value = HHA_charge, convert = TRUE)
ggplot(hha_allyear_graph) + geom_line(aes(x=Year,y=HHA_charge, group = Provider.ID)) + guides(color=F) +
scale_x_discrete(breaks=c(2013, 2014, 2015),labels=c(2013, 2014, 2015)) + theme_minimal() +
labs(x = "Year (2013-2015)", y = "Total HHA Charge Non-LUPA")
hhaData2015.F2 <- hhadatahhrg2015.untidy %>%
select("Agency.Name", "Total.HHA.Medicare.Payment.Amount..non.LUPA.", "Female.Beneficiaries", "Male.Beneficiaries") %>%
mutate(Differnece_In_Males_and_Females = Male.Beneficiaries - Female.Beneficiaries) %>%
arrange(desc(Differnece_In_Males_and_Females))
ggplot(hhaData2015.F2, aes(x = Differnece_In_Males_and_Females, y = Total.HHA.Medicare.Payment.Amount..non.LUPA.)) +
geom_line() +
labs(x = "Difference in Males and Females per HHA", y = "HHA Medicare Payment Non-LUPA")
MAE.func=function(actual,predict){
MAE=mean(abs(actual-predict))
return(MAE)
}
#Seperating the HHRG Description into new variables
hhadata2015.seperated <- hhadata2015.untidy %>%
separate(col = HHRG.Description, into = c("HHRG.Description", "Therapies", "Clinical_Severity_Level", "Functional_Severity_Level", "Service_Severity_Level"),
sep = ",", remove = FALSE, extra = "drop")
hhadata2015.seperated$Clinical_Severity_Level <- as.numeric(gsub("\\D", "", hhadata2015.seperated$Clinical_Severity_Level))
hhadata2015.seperated$Functional_Severity_Level <- as.numeric(gsub("\\D", "", hhadata2015.seperated$Functional_Severity_Level))
hhadata2015.seperated$Service_Severity_Level <- as.numeric(gsub("\\D", "", hhadata2015.seperated$Service_Severity_Level))
hhadata2015.seperated <- hhadata2015.seperated %>%
select("HHRG", "HHRG.Description", "Clinical_Severity_Level", "Functional_Severity_Level", "Service_Severity_Level", "Distinct.Beneficiaries", "Total.HHA.Medicare.Payment.Amount", "Average.HHA.Medicare.Payment.Amount")
#creating summaries of the different serverity levels
average_amt_by_service_severity <- hhadata2015.seperated %>%
group_by(Service_Severity_Level) %>%
summarize(Average_Amount_Provided_by_Medicare = sum(Total.HHA.Medicare.Payment.Amount) / sum(Distinct.Beneficiaries))
average_amt_by_clincical_severity <- hhadata2015.seperated %>%
group_by(Clinical_Severity_Level) %>%
summarize(Average_Amount_Provided_by_Medicare = sum(Total.HHA.Medicare.Payment.Amount) / sum(Distinct.Beneficiaries))
average_amt_by_functional_severity <- hhadata2015.seperated %>%
group_by(Functional_Severity_Level) %>%
summarize(Average_Amount_Provided_by_Medicare = sum(Total.HHA.Medicare.Payment.Amount) / sum(Distinct.Beneficiaries))
average_amt_by_clincical_severity
average_amt_by_functional_severity
average_amt_by_service_severity
set.seed(112)
rmse_values <- c()
for (i in 1:nrow(hhadata2015.seperated)) {
row_removed <- hhadata2015.seperated[-i, ]
lm_model <- lm(Average.HHA.Medicare.Payment.Amount ~ Service_Severity_Level + Functional_Severity_Level + Clinical_Severity_Level, data =    row_removed)
prediction <- predict(lm_model, newdata = hhadata2015.seperated[i, ])
rmse_i <- sqrt(mean((hhadata2015.seperated$Average.HHA.Medicare.Payment.Amount[i] - prediction)^2))
rmse_values <- c(rmse_values, rmse_i)
hhadata2015.seperated$RMSE[i] <- rmse_i
hhadata2015.seperated$Predictions[i] <- prediction
}
average_rmse <- mean(rmse_values)
print(paste("Average Root Mean Squared Error (RMSE) from Cross-Validation:", average_rmse))
#Creating residual plots for the different types of severity
hhadata2015.seperated$residuals <- hhadata2015.seperated$Average.HHA.Medicare.Payment.Amount - hhadata2015.seperated$Predictions
plot_data1 <- ggplot(hhadata2015.seperated, aes(x = Service_Severity_Level, y = residuals)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linetype = "dashed") +
labs(x = "Service Severity Level", y = "Residuals") +
ggtitle("Linear Model Residuals") +
theme_minimal()
plot_data2 <- ggplot(hhadata2015.seperated, aes(x = Functional_Severity_Level, y = residuals)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linetype = "dashed") +
labs(x = "Functional Severity Level", y = "Residuals") +
ggtitle("Linear Model Residuals") +
theme_minimal()
plot_data3 <- ggplot(hhadata2015.seperated, aes(x = Clinical_Severity_Level, y = residuals)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linetype = "dashed") +
labs(x = "Clinical Severity Level", y = "Residuals") +
ggtitle("Linear Model Residuals") +
theme_minimal()
#Combining into one plot
combined_data <- bind_rows(
data.frame(variable = "Service_Severity_Level", hhadata2015.seperated),
data.frame(variable = "Functional_Severity_Level", hhadata2015.seperated),
data.frame(variable = "Clinical_Severity_Level", hhadata2015.seperated)
)
# Create the overlapped plot
ggplot(hhadata2015.seperated, aes(x = as.numeric(Service_Severity_Level), y = residuals, color = "Service_Severity_Level")) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linetype = "dashed") +
labs(x = "Severity Level", y = "Residuals") +
ggtitle("Linear Model Residuals") +
scale_x_continuous(breaks = 1:4, labels = c("Severity 1", "Severity 2", "Severity 3", "Severity 4")) +
theme_minimal() +
geom_point(data = hhadata2015.seperated, aes(x = as.numeric(Functional_Severity_Level), y = residuals, color = "Functional_Severity_Level")) +
geom_point(data = hhadata2015.seperated, aes(x = as.numeric(Clinical_Severity_Level), y = residuals, color = "Clinical_Severity_Level")) +
scale_color_manual(name = "Severity Levels", values = c("Service_Severity_Level" = "blue", "Functional_Severity_Level" = "green", "Clinical_Severity_Level" = "orange"))
plot_data3
set.seed(112)
rmse_values <- c()
for (i in 1:nrow(hhadata2015.seperated)) {
row_removed <- hhadata2015.seperated[-i, ]
lm_model <- lm(Average.HHA.Medicare.Payment.Amount ~ Service_Severity_Level + Functional_Severity_Level + Clinical_Severity_Level, data =    row_removed)
prediction <- predict(lm_model, newdata = hhadata2015.seperated[i, ])
rmse_i <- sqrt(mean((hhadata2015.seperated$Average.HHA.Medicare.Payment.Amount[i] - prediction)^2))
rmse_values <- c(rmse_values, rmse_i)
hhadata2015.seperated$RMSE[i] <- rmse_i
hhadata2015.seperated$Predictions[i] <- prediction
}
average_rmse <- mean(rmse_values)
print(paste("Average Root Mean Squared Error (RMSE) from Cross-Validation:", average_rmse))
hhadata2015.seperated$
hhadata2015.seperated
set.seed(112)
rmse_values <- c()
for (i in 1:nrow(hhadata2015.seperated)) {
row_removed <- hhadata2015.seperated[-i, ]
lm_model <- lm(Average.HHA.Medicare.Payment.Amount ~ Service_Severity_Level + Functional_Severity_Level + Clinical_Severity_Level, data =    row_removed)
prediction <- predict(lm_model, newdata = hhadata2015.seperated[i, ])
rmse_i <- sqrt(mean((hhadata2015.seperated$Average.HHA.Medicare.Payment.Amount[i] - prediction)^2))
rmse_values <- c(rmse_values, rmse_i)
hhadata2015.seperated$RMSE[i] <- rmse_i
hhadata2015.seperated$Predictions[i] <- prediction
}
average_rmse <- mean(rmse_values)
print(paste("Average Root Mean Squared Error (RMSE) from Cross-Validation:", average_rmse))
hhadata2015.seperated
set.seed(112)
rmse_values <- c()
for (i in 1:nrow(hhadata2015.seperated)) {
row_removed <- hhadata2015.seperated[-i, ]
lm_model <- lm(Average.HHA.Medicare.Payment.Amount ~ Service_Severity_Level + Functional_Severity_Level + Clinical_Severity_Level, data =    row_removed)
prediction <- predict(lm_model, newdata = hhadata2015.seperated[i, ])
rmse_i <- sqrt(mean((hhadata2015.seperated$Average.HHA.Medicare.Payment.Amount[i] - prediction)^2))
rmse_values <- c(rmse_values, rmse_i)
hhadata2015.seperated$RMSE[i] <- rmse_i
hhadata2015.seperated$Predictions[i] <- prediction
}
average_rmse <- mean(rmse_values)
print(paste("Average Root Mean Squared Error (RMSE) from Cross-Validation:", average_rmse))
set.seed(112)
rmse_values <- c()
for (i in 1:nrow(hhadata2015.seperated)) {
row_removed <- hhadata2015.seperated[-i, ]
lm_model <- lm(Average.HHA.Medicare.Payment.Amount ~ Service_Severity_Level + Functional_Severity_Level + Clinical_Severity_Level, data =    row_removed)
prediction <- predict(lm_model, newdata = hhadata2015.seperated[i, ])
rmse_i <- (hhadata2015.seperated$Average.HHA.Medicare.Payment.Amount[i] - prediction)^2)
set.seed(112)
rmse_values <- c()
for (i in 1:nrow(hhadata2015.seperated)) {
row_removed <- hhadata2015.seperated[-i, ]
lm_model <- lm(Average.HHA.Medicare.Payment.Amount ~ Service_Severity_Level + Functional_Severity_Level + Clinical_Severity_Level, data =    row_removed)
prediction <- predict(lm_model, newdata = hhadata2015.seperated[i, ])
rmse_i <- ((hhadata2015.seperated$Average.HHA.Medicare.Payment.Amount[i] - prediction)^2)
rmse_values <- c(rmse_values, rmse_i)
hhadata2015.seperated$RMSE[i] <- rmse_i
hhadata2015.seperated$Predictions[i] <- prediction
}
average_rmse <- mean(rmse_values)
print(paste("Average Root Mean Squared Error (RMSE) from Cross-Validation:", average_rmse))
set.seed(112)
rmse_values <- c()
for (i in 1:nrow(hhadata2015.seperated)) {
row_removed <- hhadata2015.seperated[-i, ]
lm_model <- lm(Average.HHA.Medicare.Payment.Amount ~ Service_Severity_Level + Functional_Severity_Level + Clinical_Severity_Level, data =    row_removed)
prediction <- predict(lm_model, newdata = hhadata2015.seperated[i, ])
rmse_i <- ((hhadata2015.seperated$Average.HHA.Medicare.Payment.Amount[i] - prediction))
rmse_values <- c(rmse_values, rmse_i)
hhadata2015.seperated$RMSE[i] <- rmse_i
hhadata2015.seperated$Predictions[i] <- prediction
}
average_rmse <- sqrt(mean(rmse_values))
print(paste("Average Root Mean Squared Error (RMSE) from Cross-Validation:", average_rmse))
set.seed(112)
rmse_values <- c()
for (i in 1:nrow(hhadata2015.seperated)) {
row_removed <- hhadata2015.seperated[-i, ]
lm_model <- lm(Average.HHA.Medicare.Payment.Amount ~ Service_Severity_Level + Functional_Severity_Level + Clinical_Severity_Level, data =    row_removed)
prediction <- predict(lm_model, newdata = hhadata2015.seperated[i, ])
rmse_i <- ((hhadata2015.seperated$Average.HHA.Medicare.Payment.Amount[i] - prediction)^2)
rmse_values <- c(rmse_values, rmse_i)
hhadata2015.seperated$RMSE[i] <- rmse_i
hhadata2015.seperated$Predictions[i] <- prediction
}
average_rmse <- sqrt(mean(rmse_values))
print(paste("Average Root Mean Squared Error (RMSE) from Cross-Validation:", average_rmse))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(knitr)
library(caTools)
library(caret)
#setwd("C:/Users/dylan/Documents/GitHub/Data-Science-Final-Project-Group-2")
hhadata2015.untidy = read.csv("CSVs/medicare-home-health-agency-hha-hhrg-aggregate-report-cy-2015.csv")
hhadatastates2015.untidy = read.csv("CSVs/medicare-home-health-agency-hha-hhrg-by-state-aggregate-report-cy-2015.csv")
hhadatahhrg2015.untidy = read.csv("CSVs/medicare-home-health-agency-hha-provider-aggregate-report-cy-2015.csv")
hha_2015 <- read.csv("CSVs/medicare-home-health-agency-hha-provider-aggregate-report-cy-2015.csv")
hha_2014 <- read.csv("CSVs/medicare-home-health-agency-hha-provider-aggregate-report-cy-2014.csv")
hha_2013 <- read.csv("CSVs/medicare-home-health-provider-aggregate-table-cy-2013.csv")
rmse_values
rmse_values
rmse_i
set.seed(112)
rmse_values <- c()
for (i in 1:nrow(hhadata2015.seperated)) {
row_removed <- hhadata2015.seperated[-i, ]
lm_model <- lm(Average.HHA.Medicare.Payment.Amount ~ Service_Severity_Level + Functional_Severity_Level + Clinical_Severity_Level, data =    row_removed)
prediction <- predict(lm_model, newdata = hhadata2015.seperated[i, ])
rmse_i <- ((hhadata2015.seperated$Average.HHA.Medicare.Payment.Amount[i] - prediction)^2)
rmse_values <- c(rmse_values, rmse_i)
hhadata2015.seperated$RMSE[i] <- rmse_i
hhadata2015.seperated$Predictions[i] <- prediction
}
average_rmse <- sqrt(mean(rmse_values))
print(paste("Average Root Mean Squared Error (RMSE) from Cross-Validation:", average_rmse))
lm_model_empty <- lm(~y, data = row_removed)
set.seed(112)
rmse_values <- c()
for (i in 1:nrow(hhadata2015.seperated)) {
row_removed <- hhadata2015.seperated[-i, ]
lm_model_empty <- lm( y~, data = row_removed)
set.seed(112)
rmse_values <- c()
for (i in 1:nrow(hhadata2015.seperated)) {
row_removed <- hhadata2015.seperated[-i, ]
lm_model_empty <- lm( ~ y, data = row_removed)
lm_model <- lm(Average.HHA.Medicare.Payment.Amount ~ Service_Severity_Level + Functional_Severity_Level + Clinical_Severity_Level, data =    row_removed)
prediction <- predict(lm_model, newdata = hhadata2015.seperated[i, ])
rmse_i <- ((hhadata2015.seperated$Average.HHA.Medicare.Payment.Amount[i] - prediction)^2)
rmse_values <- c(rmse_values, rmse_i)
hhadata2015.seperated$RMSE[i] <- rmse_i
hhadata2015.seperated$Predictions[i] <- prediction
}
set.seed(112)
rmse_values <- c()
for (i in 1:nrow(hhadata2015.seperated)) {
row_removed <- hhadata2015.seperated[-i, ]
lm_model_empty <- lm(x ~ y, data = row_removed)
lm_model <- lm(Average.HHA.Medicare.Payment.Amount ~ Service_Severity_Level + Functional_Severity_Level + Clinical_Severity_Level, data =    row_removed)
prediction <- predict(lm_model, newdata = hhadata2015.seperated[i, ])
rmse_i <- ((hhadata2015.seperated$Average.HHA.Medicare.Payment.Amount[i] - prediction)^2)
rmse_values <- c(rmse_values, rmse_i)
hhadata2015.seperated$RMSE[i] <- rmse_i
hhadata2015.seperated$Predictions[i] <- prediction
}
average_rmse <- sqrt(mean(rmse_values))
print(paste("Average Root Mean Squared Error (RMSE) from Cross-Validation:", average_rmse))
lm_model_empty
set.seed(112)
rmse_values <- c()
for (i in 1:nrow(hhadata2015.seperated)) {
row_removed <- hhadata2015.seperated[-i, ]
lm_model_empty <- lm(x ~ y, data = row_removed)
lm_model_serverties <- lm(Average.HHA.Medicare.Payment.Amount ~ Service_Severity_Level + Functional_Severity_Level + Clinical_Severity_Level, data =    row_removed)
prediction <- predict(lm_model_serverties, newdata = hhadata2015.seperated[i, ])
rmse_i <- ((hhadata2015.seperated$Average.HHA.Medicare.Payment.Amount[i] - prediction)^2)
rmse_values <- c(rmse_values, rmse_i)
hhadata2015.seperated$RMSE[i] <- rmse_i
hhadata2015.seperated$Predictions[i] <- prediction
}
average_rmse <- sqrt(mean(rmse_values))
print(paste("Average Root Mean Squared Error (RMSE) from Cross-Validation:", average_rmse))
set.seed(112)
rmse_values <- c()
for (i in 1:nrow(hhadata2015.seperated)) {
row_removed <- hhadata2015.seperated[-i, ]
lm_model_empty <- lm(x ~ y, data = row_removed)
lm_model_serverties <- lm(Average.HHA.Medicare.Payment.Amount ~ Service_Severity_Level + Functional_Severity_Level + Clinical_Severity_Level, data =    row_removed)
prediction_severities <- predict(lm_model_serverties, newdata = hhadata2015.seperated[i, ])
rmse_severities <- ((hhadata2015.seperated$Average.HHA.Medicare.Payment.Amount[i] - prediction_severities)^2)
rmse_values <- c(rmse_values, rmse_severities)
hhadata2015.seperated$RMSE[i] <- rmse_severities
hhadata2015.seperated$prediction_severities[i] <- prediction_c
}
set.seed(112)
rmse_values <- c()
for (i in 1:nrow(hhadata2015.seperated)) {
row_removed <- hhadata2015.seperated[-i, ]
lm_model_empty <- lm(x ~ y, data = row_removed)
lm_model_serverties <- lm(Average.HHA.Medicare.Payment.Amount ~ Service_Severity_Level + Functional_Severity_Level + Clinical_Severity_Level, data =    row_removed)
prediction_severities <- predict(lm_model_serverties, newdata = hhadata2015.seperated[i, ])
rmse_severities <- ((hhadata2015.seperated$Average.HHA.Medicare.Payment.Amount[i] - prediction_severities)^2)
rmse_values <- c(rmse_values, rmse_severities)
hhadata2015.seperated$RMSE[i] <- rmse_severities
hhadata2015.seperated$prediction_severities[i] <- prediction_severities
}
average_rmse <- sqrt(mean(rmse_values))
print(paste("Average Root Mean Squared Error (RMSE) from Cross-Validation:", average_rmse))
hhadata2015.seperated
set.seed(112)
rmse_values_severities <- c()
for (i in 1:nrow(hhadata2015.seperated)) {
row_removed <- hhadata2015.seperated[-i, ]
lm_model_serverties <- lm(Average.HHA.Medicare.Payment.Amount ~ Service_Severity_Level +
Functional_Severity_Level + Clinical_Severity_Level,
data =  row_removed)
prediction_severities <- predict(lm_model_serverties, newdata = hhadata2015.seperated[i, ])
rmse_severities <- ((hhadata2015.seperated$Average.HHA.Medicare.Payment.Amount[i] - prediction_severities)^2)
rmse_values_severities <- c(rmse_values_severities, rmse_severities)
hhadata2015.seperated$RMSE[i] <- rmse_severities
hhadata2015.seperated$prediction_severities[i] <- prediction_severities
lm_model_empty <- lm(x ~ y, data = row_removed)
prediction_empty <- predict(lm_model_empty, newdata = hhadata2015.seperated[i, ])
rmse_empty <-  ((hhadata2015.seperated$Average.HHA.Medicare.Payment.Amount[i] - prediction_empty)^2)
rmse_values_empty <- c(rmse_values_empty, rmse_empty)
}
set.seed(112)
rmse_values_severities <- c()
rmse_values_empty <- c()
for (i in 1:nrow(hhadata2015.seperated)) {
row_removed <- hhadata2015.seperated[-i, ]
lm_model_serverties <- lm(Average.HHA.Medicare.Payment.Amount ~ Service_Severity_Level +
Functional_Severity_Level + Clinical_Severity_Level,
data =  row_removed)
prediction_severities <- predict(lm_model_serverties, newdata = hhadata2015.seperated[i, ])
rmse_severities <- ((hhadata2015.seperated$Average.HHA.Medicare.Payment.Amount[i] - prediction_severities)^2)
rmse_values_severities <- c(rmse_values_severities, rmse_severities)
hhadata2015.seperated$RMSE[i] <- rmse_severities
hhadata2015.seperated$prediction_severities[i] <- prediction_severities
lm_model_empty <- lm(x ~ y, data = row_removed)
prediction_empty <- predict(lm_model_empty, newdata = hhadata2015.seperated[i, ])
rmse_empty <-  ((hhadata2015.seperated$Average.HHA.Medicare.Payment.Amount[i] - prediction_empty)^2)
rmse_values_empty <- c(rmse_values_empty, rmse_empty)
}
average_rmse <- sqrt(mean(rmse_values_severities))
print(paste("Average Root Mean Squared Error (RMSE) from Cross-Validation:", average_rmse))
set.seed(112)
rmse_values_severities <- c()
rmse_values_empty <- c()
for (i in 1:nrow(hhadata2015.seperated)) {
row_removed <- hhadata2015.seperated[-i, ]
lm_model_serverties <- lm(Average.HHA.Medicare.Payment.Amount ~ Service_Severity_Level +
Functional_Severity_Level + Clinical_Severity_Level,
data =  row_removed)
prediction_severities <- predict(lm_model_serverties, newdata = hhadata2015.seperated[i, ])
rmse_severities <- ((hhadata2015.seperated$Average.HHA.Medicare.Payment.Amount[i] - prediction_severities)^2)
rmse_values_severities <- c(rmse_values_severities, rmse_severities)
hhadata2015.seperated$RMSE[i] <- rmse_severities
hhadata2015.seperated$prediction_severities[i] <- prediction_severities
lm_model_empty <- lm(y ~ x, data = row_removed)
prediction_empty <- predict(lm_model_empty, newdata = hhadata2015.seperated[i, ])
rmse_empty <-  ((hhadata2015.seperated$Average.HHA.Medicare.Payment.Amount[i] - prediction_empty)^2)
rmse_values_empty <- c(rmse_values_empty, rmse_empty)
}
average_rmse <- sqrt(mean(rmse_values_severities))
print(paste("Average Root Mean Squared Error (RMSE) from Cross-Validation:", average_rmse))
set.seed(112)
rmse_values_severities <- c()
rmse_values_empty <- c()
for (i in 1:nrow(hhadata2015.seperated)) {
row_removed <- hhadata2015.seperated[-i, ]
lm_model_serverties <- lm(Average.HHA.Medicare.Payment.Amount ~ Service_Severity_Level +
Functional_Severity_Level + Clinical_Severity_Level,
data =  row_removed)
prediction_severities <- predict(lm_model_serverties, newdata = hhadata2015.seperated[i, ])
rmse_severities <- ((hhadata2015.seperated$Average.HHA.Medicare.Payment.Amount[i] - prediction_severities)^2)
rmse_values_severities <- c(rmse_values_severities, rmse_severities)
hhadata2015.seperated$RMSE_Severities[i] <- rmse_severities
hhadata2015.seperated$prediction_severities[i] <- prediction_severities
lm_model_empty <- lm(y ~ x, data = row_removed)
prediction_empty <- predict(lm_model_empty, newdata = hhadata2015.seperated[i, ])
rmse_empty <-  ((hhadata2015.seperated$Average.HHA.Medicare.Payment.Amount[i] - prediction_empty)^2)
rmse_values_empty <- c(rmse_values_empty, rmse_empty)
hhadata2015.seperated$RMSE_Empty[i] <- rmse_empty
hhadata2015.seperated$prediction_empty[i] <- prediction_empty
}
average_rmse <- sqrt(mean(rmse_values_severities))
print(paste("Average Root Mean Squared Error (RMSE) from Cross-Validation:", average_rmse))
hhadata2015.seperated
set.seed(112)
rmse_values_severities <- c()
rmse_values_empty <- c()
for (i in 1:nrow(hhadata2015.seperated)) {
row_removed <- hhadata2015.seperated[-i, ]
lm_model_serverties <- lm(Average.HHA.Medicare.Payment.Amount ~ Service_Severity_Level +
Functional_Severity_Level + Clinical_Severity_Level,
data =  row_removed)
prediction_severities <- predict(lm_model_serverties, newdata = hhadata2015.seperated[i, ])
rmse_severities <- ((hhadata2015.seperated$Average.HHA.Medicare.Payment.Amount[i] - prediction_severities)^2)
rmse_values_severities <- c(rmse_values_severities, rmse_severities)
hhadata2015.seperated$RMSE_Severities[i] <- rmse_severities
hhadata2015.seperated$prediction_severities[i] <- prediction_severities
lm_model_empty <- lm(y ~ x, data = row_removed)
prediction_empty <- predict(lm_model_empty, newdata = hhadata2015.seperated[i, ])
rmse_empty <-  ((hhadata2015.seperated$Average.HHA.Medicare.Payment.Amount[i] - prediction_empty)^2)
rmse_values_empty <- c(rmse_values_empty, rmse_empty)
hhadata2015.seperated$RMSE_Empty[i] <- rmse_empty
hhadata2015.seperated$prediction_empty[i] <- prediction_empty
}
average_rmse_severities <- sqrt(mean(rmse_values_severities))
average_rmse_empty <- sqrt(mean(rmse_values_empty))
print(paste("Average Root Mean Squared Error (RMSE) for Empty Model from Cross-Validation:", average_rmse_severities))
print(paste("Average Root Mean Squared Error (RMSE) for Severities Model from Cross-Validation:", average_rmse_empty))
set.seed(112)
rmse_values_severities <- c()
rmse_values_empty <- c()
for (i in 1:nrow(hhadata2015.seperated)) {
row_removed <- hhadata2015.seperated[-i, ]
lm_model_serverties <- lm(Average.HHA.Medicare.Payment.Amount ~ Service_Severity_Level +
Functional_Severity_Level + Clinical_Severity_Level,
data =  row_removed)
prediction_severities <- predict(lm_model_serverties, newdata = hhadata2015.seperated[i, ])
rmse_severities <- ((hhadata2015.seperated$Average.HHA.Medicare.Payment.Amount[i] - prediction_severities)^2)
rmse_values_severities <- c(rmse_values_severities, rmse_severities)
hhadata2015.seperated$RMSE_Severities[i] <- rmse_severities
hhadata2015.seperated$prediction_severities[i] <- prediction_severities
lm_model_empty <- lm(y ~ x, data = row_removed)
prediction_empty <- predict(lm_model_empty, newdata = hhadata2015.seperated[i, ])
rmse_empty <-  ((hhadata2015.seperated$Average.HHA.Medicare.Payment.Amount[i] - prediction_empty)^2)
rmse_values_empty <- c(rmse_values_empty, rmse_empty)
hhadata2015.seperated$RMSE_Empty[i] <- rmse_empty
hhadata2015.seperated$prediction_empty[i] <- prediction_empty
}
average_rmse_severities <- sqrt(mean(rmse_values_severities))
average_rmse_empty <- sqrt(mean(rmse_values_empty))
print(paste("Average Root Mean Squared Error (RMSE) for Empty Model from Cross-Validation:", average_rmse_empty))
print(paste("Average Root Mean Squared Error (RMSE) for Severities Model from Cross-Validation:", average_rmse_severities))
set.seed(112)
rmse_values_severities <- c()
rmse_values_empty <- c()
#Loop that removes each row, does the lm and predictions for the different models
for (i in 1:nrow(hhadata2015.seperated)) {
#Model using the 3 different severities
row_removed <- hhadata2015.seperated[-i, ]
lm_model_serverties <- lm(Average.HHA.Medicare.Payment.Amount ~ Service_Severity_Level +
Functional_Severity_Level + Clinical_Severity_Level,
data =  row_removed)
prediction_severities <- predict(lm_model_serverties, newdata = hhadata2015.seperated[i, ])
rmse_severities <- ((hhadata2015.seperated$Average.HHA.Medicare.Payment.Amount[i] - prediction_severities)^2)
rmse_values_severities <- c(rmse_values_severities, rmse_severities)
hhadata2015.seperated$RMSE_Severities[i] <- rmse_severities
hhadata2015.seperated$prediction_severities[i] <- prediction_severities
#Empty model
lm_model_empty <- lm(x ~ y, data = row_removed)
prediction_empty <- predict(lm_model_empty, newdata = hhadata2015.seperated[i, ])
rmse_empty <-  ((hhadata2015.seperated$Average.HHA.Medicare.Payment.Amount[i] - prediction_empty)^2)
rmse_values_empty <- c(rmse_values_empty, rmse_empty)
hhadata2015.seperated$RMSE_Empty[i] <- rmse_empty
hhadata2015.seperated$prediction_empty[i] <- prediction_empty
}
average_rmse_severities <- sqrt(mean(rmse_values_severities))
average_rmse_empty <- sqrt(mean(rmse_values_empty))
print(paste("Average Root Mean Squared Error (RMSE) for Empty Model from Cross-Validation:", average_rmse_empty))
print(paste("Average Root Mean Squared Error (RMSE) for Severities Model from Cross-Validation:", average_rmse_severities))
set.seed(112)
rmse_values_severities <- c()
rmse_values_empty <- c()
#Loop that removes each row, does the lm and predictions for the different models
for (i in 1:nrow(hhadata2015.seperated)) {
#Model using the 3 different severities
row_removed <- hhadata2015.seperated[-i, ]
lm_model_serverties <- lm(Average.HHA.Medicare.Payment.Amount ~ Service_Severity_Level +
Functional_Severity_Level + Clinical_Severity_Level,
data =  row_removed)
prediction_severities <- predict(lm_model_serverties, newdata = hhadata2015.seperated[i, ])
rmse_severities <- ((hhadata2015.seperated$Average.HHA.Medicare.Payment.Amount[i] - prediction_severities)^2)
rmse_values_severities <- c(rmse_values_severities, rmse_severities)
hhadata2015.seperated$RMSE_Severities[i] <- rmse_severities
hhadata2015.seperated$prediction_severities[i] <- prediction_severities
#Empty model
lm_model_empty <- lm( ~ y, data = row_removed)
prediction_empty <- predict(lm_model_empty, newdata = hhadata2015.seperated[i, ])
rmse_empty <-  ((hhadata2015.seperated$Average.HHA.Medicare.Payment.Amount[i] - prediction_empty)^2)
rmse_values_empty <- c(rmse_values_empty, rmse_empty)
hhadata2015.seperated$RMSE_Empty[i] <- rmse_empty
hhadata2015.seperated$prediction_empty[i] <- prediction_empty
}
set.seed(112)
rmse_values_severities <- c()
rmse_values_empty <- c()
#Loop that removes each row, does the lm and predictions for the different models
for (i in 1:nrow(hhadata2015.seperated)) {
#Model using the 3 different severities
row_removed <- hhadata2015.seperated[-i, ]
lm_model_serverties <- lm(Average.HHA.Medicare.Payment.Amount ~ Service_Severity_Level +
Functional_Severity_Level + Clinical_Severity_Level,
data =  row_removed)
prediction_severities <- predict(lm_model_serverties, newdata = hhadata2015.seperated[i, ])
rmse_severities <- ((hhadata2015.seperated$Average.HHA.Medicare.Payment.Amount[i] - prediction_severities)^2)
rmse_values_severities <- c(rmse_values_severities, rmse_severities)
hhadata2015.seperated$RMSE_Severities[i] <- rmse_severities
hhadata2015.seperated$prediction_severities[i] <- prediction_severities
#Empty model
lm_model_empty <- lm(x ~ y, data = row_removed)
prediction_empty <- predict(lm_model_empty, newdata = hhadata2015.seperated[i, ])
rmse_empty <-  ((hhadata2015.seperated$Average.HHA.Medicare.Payment.Amount[i] - prediction_empty)^2)
rmse_values_empty <- c(rmse_values_empty, rmse_empty)
hhadata2015.seperated$RMSE_Empty[i] <- rmse_empty
hhadata2015.seperated$prediction_empty[i] <- prediction_empty
}
average_rmse_severities <- sqrt(mean(rmse_values_severities))
average_rmse_empty <- sqrt(mean(rmse_values_empty))
print(paste("Average Root Mean Squared Error (RMSE) for Empty Model from Cross-Validation:", average_rmse_empty))
print(paste("Average Root Mean Squared Error (RMSE) for Severities Model from Cross-Validation:", average_rmse_severities))
