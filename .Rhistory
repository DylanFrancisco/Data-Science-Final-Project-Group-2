rmse_values_therapies_clinical <- c(rmse_values_therapies_clinical, rmse_therapies_clinical)
hhadata2015.seperated$RMSE_Therapies_and_Clinical[i] <- rmse_therapies_clinical
hhadata2015.seperated$prediction_therapies_and_clinical[i] <- prediction_therapies_clinical
#Model using Therapies + Functional
lm_model_therapies_functional <- lm(Average.HHA.Medicare.Payment.Amount ~ Therapies + Functional_Severity_Level, data = row_removed)
prediction_therapies_functional <- predict(lm_model_therapies_functional, newdata = hhadata2015.seperated[i, ])
rmse_therapies_functional <- ((hhadata2015.seperated$Average.HHA.Medicare.Payment.Amount[i] - prediction_therapies_functional)^2)
rmse_values_therapies_functional <- c(rmse_values_therapies_functional, rmse_therapies_functional)
hhadata2015.seperated$RMSE_Therapies_and_Functional[i] <- rmse_therapies_functional
hhadata2015.seperated$prediction_therapies_and_functional[i] <- prediction_therapies_functional
#Model using Therapies + Service
lm_model_therapies_service <- lm(Average.HHA.Medicare.Payment.Amount ~ Therapies + Service_Severity_Level, data = row_removed)
prediction_therapies_service <- predict(lm_model_therapies_service, newdata = hhadata2015.seperated[i, ])
rmse_therapies_service <- ((hhadata2015.seperated$Average.HHA.Medicare.Payment.Amount[i] - prediction_therapies_service)^2)
rmse_values_therapies_service <- c(rmse_values_therapies_service, rmse_therapies_service)
hhadata2015.seperated$RMSE_Therapies_and_Service[i] <- rmse_therapies_service
hhadata2015.seperated$prediction_therapies_and_service[i] <- prediction_therapies_service
#Model using all variables
lm_model_all_var <- lm(Average.HHA.Medicare.Payment.Amount ~ Therapies + Service_Severity_Level + Clinical_Severity_Level
+ Functional_Severity_Level, data = row_removed)
prediction_all_var <- predict(lm_model_all_var, newdata = hhadata2015.seperated[i, ])
rmse_all_var <- ((hhadata2015.seperated$Average.HHA.Medicare.Payment.Amount[i] - prediction_all_var)^2)
rmse_values_all_var <- c(rmse_values_all_var, rmse_all_var)
hhadata2015.seperated$RMSE_All_Variables[i] <- rmse_all_var
hhadata2015.seperated$prediction_all_variables[i] <- prediction_all_var
}
average_rmse_severities <- sqrt(mean(rmse_values_severities))
average_rmse_empty <- sqrt(mean(rmse_values_empty))
average_rmse_service <- sqrt(mean(rmse_values_service))
average_rmse_functional <- sqrt(mean(rmse_values_functional))
average_rmse_clinical <- sqrt(mean(rmse_values_clinical))
average_rmse_therapies <- sqrt(mean(rmse_values_therapies))
average_rmse_therapies_clinical <- sqrt(mean(rmse_values_therapies_clinical))
average_rmse_therapies_functional <- sqrt(mean(rmse_values_therapies_functional))
average_rmse_therapies_service <- sqrt(mean(rmse_values_therapies_service))
average_rmse_all_var<- sqrt(mean(rmse_values_all_var))
print(paste("Average Root Mean Squared Error (RMSE) for Empty Model from Cross-Validation:", average_rmse_empty))
print(paste("Average Root Mean Squared Error (RMSE) for Severities Model from Cross-Validation:", average_rmse_severities))
print(paste("Average Root Mean Squared Error (RMSE) for Service Severity Model from Cross-Validation:", average_rmse_service))
print(paste("Average Root Mean Squared Error (RMSE) for Functional Severity Model from Cross-Validation:", average_rmse_functional))
print(paste("Average Root Mean Squared Error (RMSE) for Clinical Severity Model from Cross-Validation:", average_rmse_clinical))
print(paste("Average Root Mean Squared Error (RMSE) for Therapies Model from Cross-Validation:", average_rmse_therapies))
print(paste("Average Root Mean Squared Error (RMSE) for Therapies and Clinical Severity Model from Cross-Validation:", average_rmse_therapies_clinical))
print(paste("Average Root Mean Squared Error (RMSE) for Therapies and Functional Severity Model from Cross-Validation:", average_rmse_therapies_functional))
print(paste("Average Root Mean Squared Error (RMSE) for Therapies and Service Severity Model from Cross-Validation:", average_rmse_therapies_service))
print(paste("Average Root Mean Squared Error (RMSE) for all varibales from Cross-Validation:", average_rmse_all_var))
rmse_data <- tibble(
Description = c(
"Empty Model", "Severities Model", "Service Severity Model", "Functional Severity Model",
"Clinical Severity Model", "Therapies Model", "Therapies and Clinical Severity Model",
"Therapies and Functional Severity Model", "Therapies and Service Severity Model", "All Variables Model"
),
RMSE = round(c(
average_rmse_empty, average_rmse_severities, average_rmse_service, average_rmse_functional,
average_rmse_clinical, average_rmse_therapies, average_rmse_therapies_clinical,
average_rmse_therapies_functional, average_rmse_therapies_service, average_rmse_all_var
), 2)
)
rmse_data <- arrange(rmse_data, desc(RMSE))
kable_table <- kable(rmse_data, format = "html", caption = "RMSE Values For Linear Models")
cat(kable_table, file = "rmse_table.html")
kable_table
hhadata2015.untidy
hhadata2015.seperated
hhadata2015.untidy
hhadata2015.seperated
rmse_data <- tibble(
Description = c(
"Empty Model", "Severities Model", "Service Severity Model", "Functional Severity Model",
"Clinical Severity Model", "Therapies Model", "Therapies and Clinical Severity Model",
"Therapies and Functional Severity Model", "Therapies and Service Severity Model", "All Variables Model"
),
RMSE = round(c(
average_rmse_empty, average_rmse_severities, average_rmse_service, average_rmse_functional,
average_rmse_clinical, average_rmse_therapies, average_rmse_therapies_clinical,
average_rmse_therapies_functional, average_rmse_therapies_service, average_rmse_all_var
), 2)
)
rmse_data <- arrange(rmse_data, desc(RMSE))
rmse_kable_table <- kable(rmse_data, format = "html", caption = "RMSE Values For Linear Models")
cat(kable_table, file = "rmse_table.html")
rmse_kable_table
col_names <- c("HHRG", "Therapies", "Clinical Severity Level", "Functional Severity Level",
"Service Severity Level", "Distinct Beneficiaries", "Average HHA Medicare Payment Amount")
hhadata2015.seperated_renamed <- hhadata2015.seperated %>%
setNames(col_names)
hhadata2015.seperated_renamed
hhadata2015.seperated <- hhadata2015.seperated %>%
select("HHRG", "Therapies", "Clinical_Severity_Level", "Functional_Severity_Level", "Service_Severity_Level", "Distinct.Beneficiaries", "Average.HHA.Medicare.Payment.Amount")
hhadata2015.seperated
#Seperating the HHRG Description into new variables
hhadata2015.seperated <- hhadata2015.untidy %>%
separate(col = HHRG.Description, into = c("HHRG.Description", "Therapies", "Clinical_Severity_Level", "Functional_Severity_Level", "Service_Severity_Level"),
sep = ",", remove = FALSE, extra = "drop")
hhadata2015.seperated$Clinical_Severity_Level <- as.numeric(gsub("\\D", "", hhadata2015.seperated$Clinical_Severity_Level))
hhadata2015.seperated$Functional_Severity_Level <- as.numeric(gsub("\\D", "", hhadata2015.seperated$Functional_Severity_Level))
hhadata2015.seperated$Service_Severity_Level <- as.numeric(gsub("\\D", "", hhadata2015.seperated$Service_Severity_Level))
hhadata2015.seperated <- hhadata2015.seperated %>%
select("HHRG","HHRG Desc" ,"Therapies", "Clinical_Severity_Level", "Functional_Severity_Level", "Service_Severity_Level", "Distinct.Beneficiaries", "Average.HHA.Medicare.Payment.Amount")
#Seperating the HHRG Description into new variables
hhadata2015.seperated <- hhadata2015.untidy %>%
separate(col = HHRG.Description, into = c("HHRG.Description", "Therapies", "Clinical_Severity_Level", "Functional_Severity_Level", "Service_Severity_Level"),
sep = ",", remove = FALSE, extra = "drop")
hhadata2015.seperated$Clinical_Severity_Level <- as.numeric(gsub("\\D", "", hhadata2015.seperated$Clinical_Severity_Level))
hhadata2015.seperated$Functional_Severity_Level <- as.numeric(gsub("\\D", "", hhadata2015.seperated$Functional_Severity_Level))
hhadata2015.seperated$Service_Severity_Level <- as.numeric(gsub("\\D", "", hhadata2015.seperated$Service_Severity_Level))
hhadata2015.seperated <- hhadata2015.seperated %>%
select("HHRG","HHRG.Description" ,"Therapies", "Clinical_Severity_Level", "Functional_Severity_Level", "Service_Severity_Level", "Distinct.Beneficiaries", "Average.HHA.Medicare.Payment.Amount")
col_names <- c("HHRG", "Therapies", "Clinical Severity Level", "Functional Severity Level",
"Service Severity Level", "Distinct Beneficiaries", "Average HHA Medicare Payment Amount")
hhadata2015.seperated_renamed <- hhadata2015.seperated %>%
setNames(col_names)
hhadata2015.seperated_renamed
hhadata2015.seperated
col_names <- c("HHRG", "HRRG Desc","Therapies", "Clinical Severity Level", "Functional Severity Level",
"Service Severity Level", "Distinct Beneficiaries", "Average HHA Medicare Payment Amount")
hhadata2015.seperated_renamed <- hhadata2015.seperated %>%
setNames(col_names)
hhadata2015.seperated_renamed
col_names <- c("HHRG", "HRRG Desc","Therapies", "Clinical Severity Level", "Functional Severity Level",
"Service Severity Level", "Distinct Beneficiaries", "Average HHA Medicare Payment Amount")
hhadata2015.seperated_renamed <- hhadata2015.seperated %>%
select("HHRG", "Therapies", everything())
setNames(col_names)
col_names <- c("HHRG", "HRRG Desc","Therapies", "Clinical Severity Level", "Functional Severity Level",
"Service Severity Level", "Distinct Beneficiaries", "Average HHA Medicare Payment Amount")
hhadata2015.seperated_renamed <- hhadata2015.seperated %>%
setNames(col_names)
col_names <- c("HHRG", "HRRG Desc","Therapies", "Clinical Severity Level", "Functional Severity Level",
"Service Severity Level", "Distinct Beneficiaries", "Average HHA Medicare Payment Amount")
hhadata2015.seperated_renamed <- hhadata2015.seperated %>%
select("HHRG", "Therapies", everything() %>%
setNames(col_names)
col_names <- c("HHRG", "HRRG Desc","Therapies", "Clinical Severity Level", "Functional Severity Level",
"Service Severity Level", "Distinct Beneficiaries", "Average HHA Medicare Payment Amount")
hhadata2015.seperated_renamed <- hhadata2015.seperated %>%
select("HHRG", "Therapies", everything()) %>%
setNames(col_names)
hhadata2015.seperated_renamed
col_names <- c("HHRG", "HRRG Desc","Therapies", "Clinical Severity Level", "Functional Severity Level",
"Service Severity Level", "Distinct Beneficiaries", "Average HHA Medicare Payment Amount")
hhadata2015.seperated_renamed <- hhadata2015.seperated %>%
select("HHRG", "Therapies", "Clinical Severity Level", "Functional Severity Level",
"Service Severity Level", "Distinct Beneficiaries", "Average HHA Medicare Payment Amount") %>%
setNames(col_names)
col_names <- c("HHRG", "HRRG Desc","Therapies", "Clinical Severity Level", "Functional Severity Level",
"Service Severity Level", "Distinct Beneficiaries", "Average HHA Medicare Payment Amount")
hhadata2015.seperated_renamed <- hhadata2015.seperated %>%
select("HHRG", "Therapies", "Clinical_Severity_Level", "Functional_Severity_Level", "Service_Severity_Level", "Distinct.Beneficiaries", "Average.HHA.Medicare.Payment.Amount") %>%
setNames(col_names)
hhadata2015.seperated_renamed <- hhadata2015.seperated %>%
select("HHRG", "Therapies", "Clinical_Severity_Level", "Functional_Severity_Level", "Service_Severity_Level", "Distinct.Beneficiaries", "Average.HHA.Medicare.Payment.Amount")
hhadata2015.seperated_renamed
col_names <- c("HHRG","Therapies", "Clinical Severity Level", "Functional Severity Level",
"Service Severity Level", "Distinct Beneficiaries", "Average HHA Medicare Payment Amount")
hhadata2015.seperated_renamed <- hhadata2015.seperated %>%
select("HHRG", "Therapies", "Clinical_Severity_Level", "Functional_Severity_Level", "Service_Severity_Level", "Distinct.Beneficiaries", "Average.HHA.Medicare.Payment.Amount") %>%
setNames(col_names)
hhadata2015.seperated_renamed
hhadata2015.seperated <- hhadata2015.untidy %>%
separate(col = HHRG.Description, into = c("HHRG.Description", "Therapies", "Clinical_Severity_Level", "Functional_Severity_Level", "Service_Severity_Level"),
sep = ",", remove = FALSE, extra = "drop")
hhadata2015.seperated$Clinical_Severity_Level <- as.numeric(gsub("\\D", "", hhadata2015.seperated$Clinical_Severity_Level))
hhadata2015.seperated$Functional_Severity_Level <- as.numeric(gsub("\\D", "", hhadata2015.seperated$Functional_Severity_Level))
hhadata2015.seperated$Service_Severity_Level <- as.numeric(gsub("\\D", "", hhadata2015.seperated$Service_Severity_Level))
hhadata2015.seperated <- hhadata2015.seperated %>%
select("HHRG","HHRG.Description" ,"Therapies", "Clinical_Severity_Level", "Functional_Severity_Level", "Service_Severity_Level", "Distinct.Beneficiaries", "Average.HHA.Medicare.Payment.Amount")
hhadata2015.seperated
hhadata2015.untidy
#Seperating the HHRG Description into new variables
hhadata2015.seperated <- hhadata2015.untidy %>%
separate(col = HHRG.Description, into = c("HHRG.Description", "Therapies", "Clinical_Severity_Level", "Functional_Severity_Level", "Service_Severity_Level"),
sep = ",", remove = FALSE, extra = "drop")
hhadata2015.seperated$Clinical_Severity_Level <- as.numeric(gsub("\\D", "", hhadata2015.seperated$Clinical_Severity_Level))
hhadata2015.seperated$Functional_Severity_Level <- as.numeric(gsub("\\D", "", hhadata2015.seperated$Functional_Severity_Level))
hhadata2015.seperated$Service_Severity_Level <- as.numeric(gsub("\\D", "", hhadata2015.seperated$Service_Severity_Level))
hhadata2015.seperated <- hhadata2015.seperated %>%
select("HHRG","HHRG.Description" ,"Therapies", "Clinical_Severity_Level", "Functional_Severity_Level", "Service_Severity_Level", "Total.Episodes", "Average.HHA.Medicare.Payment.Amount")
col_names <- c("HHRG","Therapies", "Clinical Severity Level", "Functional Severity Level",
"Service Severity Level", "Distinct Beneficiaries", "Average HHA Medicare Payment Amount")
hhadata2015.seperated_renamed <- hhadata2015.seperated %>%
select("HHRG", "Therapies", "Clinical_Severity_Level", "Functional_Severity_Level", "Service_Severity_Level", "Distinct.Beneficiaries", "Average.HHA.Medicare.Payment.Amount") %>%
setNames(col_names)
col_names <- c("HHRG","Therapies", "Clinical Severity Level", "Functional Severity Level",
"Service Severity Level", "Total Episodes", "Average HHA Medicare Payment Amount")
hhadata2015.seperated_renamed <- hhadata2015.seperated %>%
select("HHRG", "Therapies", "Clinical_Severity_Level", "Functional_Severity_Level", "Service_Severity_Level", "Total.Episodes", "Average.HHA.Medicare.Payment.Amount") %>%
setNames(col_names)
hhadata2015.seperated_renamed
col_names <- c("HHRG","Therapies", "Clinical Severity Level", "Functional Severity Level",
"Service Severity Level", "Total Episodes", "Average HHA Medicare Payment Amount")
hhadata2015.seperated_renamed <- hhadata2015.seperated %>%
select("HHRG", "Therapies", "Clinical_Severity_Level", "Functional_Severity_Level", "Service_Severity_Level", "Total.Episodes", "Average.HHA.Medicare.Payment.Amount") %>%
setNames(col_names)
pretty_kable_table <- kable(hhadata2015.seperated_renamed, format = "html", caption = "HHRG Aggregation Data 2015")
cat(pretty_kable_table, file = "OG Data")
pretty_kable_table,
pretty_kable_table
col_names <- c("HHRG","Therapies", "Clinical Severity Level", "Functional Severity Level",
"Service Severity Level", "Total Episodes", "Average HHA Medicare Payment Amount")
hhadata2015.seperated_renamed <- hhadata2015.seperated %>%
select("HHRG", "Therapies", "Clinical_Severity_Level", "Functional_Severity_Level", "Service_Severity_Level", "Total.Episodes", "Average.HHA.Medicare.Payment.Amount") %>%
setNames(col_names)
pretty_kable_table <- kable(hhadata2015.seperated_renamed, format = "html", caption = "HHRG Aggregation Data 2015") %>%
add_header_above(c(" ", "Therapy" = 1, "Severity Levels" = 3, "Service Level" = 1, "Beneficiaries" = 1, "Medicare Payment Amount" = 1))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(kable)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(kableExtra)
library(knitr)
library(caTools)
library(caret)
#setwd("C:/Users/dylan/Documents/GitHub/Data-Science-Final-Project-Group-2")
hhadata2015.untidy = read.csv("CSVs/medicare-home-health-agency-hha-hhrg-aggregate-report-cy-2015.csv")
hhadatastates2015.untidy = read.csv("CSVs/medicare-home-health-agency-hha-hhrg-by-state-aggregate-report-cy-2015.csv")
hhadatahhrg2015.untidy = read.csv("CSVs/medicare-home-health-agency-hha-provider-aggregate-report-cy-2015.csv")
hha_2015 <- read.csv("CSVs/medicare-home-health-agency-hha-provider-aggregate-report-cy-2015.csv")
hha_2014 <- read.csv("CSVs/medicare-home-health-agency-hha-provider-aggregate-report-cy-2014.csv")
hha_2013 <- read.csv("CSVs/medicare-home-health-provider-aggregate-table-cy-2013.csv")
col_names <- c("HHRG","Therapies", "Clinical Severity Level", "Functional Severity Level",
"Service Severity Level", "Total Episodes", "Average HHA Medicare Payment Amount")
hhadata2015.seperated_renamed <- hhadata2015.seperated %>%
select("HHRG", "Therapies", "Clinical_Severity_Level", "Functional_Severity_Level", "Service_Severity_Level", "Total.Episodes", "Average.HHA.Medicare.Payment.Amount") %>%
setNames(col_names)
pretty_kable_table <- kable(hhadata2015.seperated_renamed, format = "html", caption = "HHRG Aggregation Data 2015") %>%
add_header_above(c(" ", "Therapy" = 1, "Severity Levels" = 3, "Service Level" = 1, "Beneficiaries" = 1, "Medicare Payment Amount" = 1))
col_names <- c("HHRG","Therapies", "Clinical Severity Level", "Functional Severity Level",
"Service Severity Level", "Total Episodes", "Average HHA Medicare Payment Amount")
hhadata2015.seperated_renamed <- hhadata2015.seperated %>%
select("HHRG", "Therapies", "Clinical_Severity_Level", "Functional_Severity_Level", "Service_Severity_Level", "Total.Episodes", "Average.HHA.Medicare.Payment.Amount") %>%
setNames(col_names)
pretty_kable_table <- kable(hhadata2015.seperated_renamed, format = "html", caption = "HHRG Aggregation Data 2015")
cat(pretty_kable_table, file = "OG Data")
col_names <- c("HHRG","Expected Therapy Visits", "Clinical Severity Level", "Functional Severity Level",
"Service Severity Level", "Total Episodes", "Average HHA Medicare Payment Amount")
hhadata2015.seperated_renamed <- hhadata2015.seperated %>%
select("HHRG", "Therapies", "Clinical_Severity_Level", "Functional_Severity_Level", "Service_Severity_Level", "Total.Episodes", "Average.HHA.Medicare.Payment.Amount") %>%
setNames(col_names)
pretty_kable_table <- kable(hhadata2015.seperated_renamed, format = "html", caption = "HHRG Aggregation Data 2015")
cat(pretty_kable_table, file = "OG Data")
pretty_kable_table
hhadata2015.untidy
#Seperating the HHRG Description into new variables
hhadata2015.seperated <- hhadata2015.untidy %>%
separate(col = HHRG.Description, into = c("HHRG.Description", "Therapies", "Clinical_Severity_Level", "Functional_Severity_Level", "Service_Severity_Level"),
sep = ",", remove = FALSE, extra = "drop")
hhadata2015.seperated$Clinical_Severity_Level <- as.numeric(gsub("\\D", "", hhadata2015.seperated$Clinical_Severity_Level))
hhadata2015.seperated$Functional_Severity_Level <- as.numeric(gsub("\\D", "", hhadata2015.seperated$Functional_Severity_Level))
hhadata2015.seperated$Service_Severity_Level <- as.numeric(gsub("\\D", "", hhadata2015.seperated$Service_Severity_Level))
hhadata2015.seperated <- hhadata2015.seperated %>%
select("HHRG","HHRG.Description" ,"Therapies", "Clinical_Severity_Level", "Functional_Severity_Level", "Service_Severity_Level", "Total.Episodes", "Average.HHA.Medicare.Payment.Amount", "Total.HHA.Medicare.Payment.Amount")
col_names <- c("HHRG","Expected Therapy Visits", "Clinical Severity Level", "Functional Severity Level",
"Service Severity Level", "Total HHA Medicare Payment Amount" ,"Total Episodes", "Average HHA Medicare Payment Amount")
hhadata2015.seperated_renamed <- hhadata2015.seperated %>%
select("HHRG", "Therapies", "Clinical_Severity_Level", "Functional_Severity_Level", "Service_Severity_Level", "Total.HHA.Medicare.Payment.Amount" ,"Total.Episodes", "Average.HHA.Medicare.Payment.Amount") %>%
setNames(col_names)
pretty_kable_table <- kable(hhadata2015.seperated_renamed, format = "html", caption = "HHRG Aggregation Data 2015")
cat(pretty_kable_table, file = "OG Data")
pretty_kable_table
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(kableExtra)
library(knitr)
library(caTools)
library(caret)
#setwd("C:/Users/dylan/Documents/GitHub/Data-Science-Final-Project-Group-2")
hhadata2015.untidy = read.csv("CSVs/medicare-home-health-agency-hha-hhrg-aggregate-report-cy-2015.csv")
hhadatastates2015.untidy = read.csv("CSVs/medicare-home-health-agency-hha-hhrg-by-state-aggregate-report-cy-2015.csv")
hhadatahhrg2015.untidy = read.csv("CSVs/medicare-home-health-agency-hha-provider-aggregate-report-cy-2015.csv")
hha_2015 <- read.csv("CSVs/medicare-home-health-agency-hha-provider-aggregate-report-cy-2015.csv")
hha_2014 <- read.csv("CSVs/medicare-home-health-agency-hha-provider-aggregate-report-cy-2014.csv")
hha_2013 <- read.csv("CSVs/medicare-home-health-provider-aggregate-table-cy-2013.csv")
hhadata2015 <- hhadata2015.untidy %>%
select("HHRG", "Total.Episodes", "Total.HHA.Medicare.Payment.Amount", "Average.HHA.Medicare.Payment.Amount")
ggplot(hhadata2015, aes(x = HHRG, y = Total.HHA.Medicare.Payment.Amount)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(y = "Average Medicare Payment") +
scale_x_discrete(guide = guide_axis(n.dodge=15)) +
theme_minimal()
hhaStateData2015 <- hhadatastates2015.untidy %>%
select("State", "Average.HHA.Charge.Amount", "Total.Episodes" )
ggplot(hhaStateData2015, aes(x = State, y = Total.Episodes)) +
geom_point() +
labs(y = "Total Episodes per HHRG") +
scale_x_discrete(guide = guide_axis(n.dodge=2)) +
theme_minimal()
ggplot(hhaStateData2015, aes(x= State, y = Average.HHA.Charge.Amount)) +
geom_boxplot() +
scale_x_discrete(guide = guide_axis(n.dodge=2)) +
theme_minimal()
ggplot(hhadata2015, aes(x=HHRG, y = Average.HHA.Medicare.Payment.Amount)) +
geom_point() +
scale_x_discrete(guide = guide_axis(n.dodge=15))
hha_2015 %>% rename( "distinct"="Distinct.Beneficiaries..non.LUPA.") %>% mutate(actual_with_cancer =Percent.of.Beneficiaries.with.Cancer * .01 * distinct) %>%ggplot() + geom_point(aes(x = actual_with_cancer, y=Total.HHA.Charge.Amount..non.LUPA.)) +
labs(x = "Number People with Cancer", y = "Total HHA Charge Non-LUPA")
hha_2015 %>% rename( "distinct"="Distinct.Beneficiaries..non.LUPA.") %>% mutate(actual_with_Atrial.Fibrillation =Percent.of.Beneficiaries.with.Atrial.Fibrillation * .01 * distinct) %>%ggplot() + geom_point(aes(x = actual_with_Atrial.Fibrillation, y=Total.HHA.Charge.Amount..non.LUPA.))+
labs(x = "Number People with Atrial Fibrillation", y = "Total HHA Charge Non-LUPA")
hhaData2015Females <-  hhadatahhrg2015.untidy %>%
select("Provider.ID", "Male.Beneficiaries", "Female.Beneficiaries", "Total.HHA.Medicare.Payment.Amount..non.LUPA." ) %>%
filter(!Male.Beneficiaries>Female.Beneficiaries) %>%
filter(!Female.Beneficiaries - Male.Beneficiaries < 10) %>%
transmute(Females = "Females", Average = mean(Total.HHA.Medicare.Payment.Amount..non.LUPA.))
hhaData2015Males <-  hhadatahhrg2015.untidy %>%
select("Provider.ID", "Male.Beneficiaries", "Female.Beneficiaries", "Total.HHA.Medicare.Payment.Amount..non.LUPA." ) %>%
filter(Male.Beneficiaries>Female.Beneficiaries) %>%
filter(!Male.Beneficiaries - Female.Beneficiaries < 10) %>%
transmute(Males = "Males", Average = mean(Total.HHA.Medicare.Payment.Amount..non.LUPA.))
MalesVFemales <- tibble(
Sex = c("More Males", "More Females"),
Average_Paid_By_Medicare = c("$918,996.2", "$2,191,278")
)
MalesVFemaleshtml <- kable(MalesVFemales, format = "html", caption = "Average paid by Medicare for Home Health Agencies based on if more Males or Female Beneficiaries are Present by 10")
MalesVFemaleshtml
hha_2015_q2 <- hha_2015 %>% select( (1:5), (16:19), 37)
hha_2014_q2 <- hha_2014%>% select( (1:5), (16:19), 37) %>% rename("Total.HHA.Charge.Amount..non.LUPA_2014" = "Total.HHA.Charge.Amount..non.LUPA.") %>% select(Provider.ID, Total.HHA.Charge.Amount..non.LUPA_2014)
hha_2013_q2 <- hha_2013%>% select( (1:5), (16:19), 37) %>% rename("Total.HHA.Charge.Amount..non.LUPA_2013" = "Total.HHA.Charge.Amount..non.LUPA.") %>% select(Provider.ID, Total.HHA.Charge.Amount..non.LUPA_2013)
hha_allyear<- hha_2015_q2 %>% inner_join(hha_2014_q2, "Provider.ID") %>% inner_join(hha_2013_q2, "Provider.ID") %>% select((1:6), (11:12)) %>% rename("2015" = "Total.HHA.Charge.Amount..non.LUPA.", "2014" = "Total.HHA.Charge.Amount..non.LUPA_2014", "2013" = "Total.HHA.Charge.Amount..non.LUPA_2013")
hha_allyear_graph <- hha_allyear %>% gather(`2015`, `2013`, `2014`, key  = Year, value = HHA_charge, convert = TRUE)
ggplot(hha_allyear_graph) + geom_line(aes(x=Year,y=HHA_charge, group = Provider.ID)) + guides(color=F) +
scale_x_discrete(breaks=c(2013, 2014, 2015),labels=c(2013, 2014, 2015)) + theme_minimal() +
labs(x = "Year (2013-2015)", y = "Total HHA Charge Non-LUPA")
hhaData2015.F2 <- hhadatahhrg2015.untidy %>%
select("Agency.Name", "Total.HHA.Medicare.Payment.Amount..non.LUPA.", "Female.Beneficiaries", "Male.Beneficiaries") %>%
mutate(Differnece_In_Males_and_Females = Male.Beneficiaries - Female.Beneficiaries) %>%
arrange(desc(Differnece_In_Males_and_Females))
ggplot(hhaData2015.F2, aes(x = Differnece_In_Males_and_Females, y = Total.HHA.Medicare.Payment.Amount..non.LUPA.)) +
geom_line() +
labs(x = "Difference in Males and Females per HHA", y = "HHA Medicare Payment Non-LUPA")
MAE.func=function(actual,predict){
MAE=mean(abs(actual-predict))
return(MAE)
}
#Seperating the HHRG Description into new variables
hhadata2015.seperated <- hhadata2015.untidy %>%
separate(col = HHRG.Description, into = c("HHRG.Description", "Therapies", "Clinical_Severity_Level", "Functional_Severity_Level", "Service_Severity_Level"),
sep = ",", remove = FALSE, extra = "drop")
hhadata2015.seperated$Clinical_Severity_Level <- as.numeric(gsub("\\D", "", hhadata2015.seperated$Clinical_Severity_Level))
hhadata2015.seperated$Functional_Severity_Level <- as.numeric(gsub("\\D", "", hhadata2015.seperated$Functional_Severity_Level))
hhadata2015.seperated$Service_Severity_Level <- as.numeric(gsub("\\D", "", hhadata2015.seperated$Service_Severity_Level))
hhadata2015.seperated <- hhadata2015.seperated %>%
select("HHRG","HHRG.Description" ,"Therapies", "Clinical_Severity_Level", "Functional_Severity_Level", "Service_Severity_Level", "Total.Episodes", "Average.HHA.Medicare.Payment.Amount", "Total.HHA.Medicare.Payment.Amount")
col_names <- c("HHRG","Expected Therapy Visits", "Clinical Severity Level", "Functional Severity Level",
"Service Severity Level", "Total HHA Medicare Payment Amount" ,"Total Episodes", "Average HHA Medicare Payment Amount")
hhadata2015.seperated_renamed <- hhadata2015.seperated %>%
select("HHRG", "Therapies", "Clinical_Severity_Level", "Functional_Severity_Level", "Service_Severity_Level", "Total.HHA.Medicare.Payment.Amount" ,"Total.Episodes", "Average.HHA.Medicare.Payment.Amount") %>%
setNames(col_names)
pretty_kable_table <- kable(hhadata2015.seperated_renamed, format = "html", caption = "HHRG Aggregation Data 2015")
cat(pretty_kable_table, file = "OG Data")
set.seed(112)
rmse_values_severities <- c()
rmse_values_empty <- c()
rmse_values_service <-  c()
rmse_values_functional <- c()
rmse_values_clinical <- c()
rmse_values_therapies <- c()
rmse_values_therapies_clinical <-  c()
rmse_values_therapies_functional <- c()
rmse_values_therapies_service <- c()
rmse_values_all_var <- c()
#Loop that removes each row, does the lm and predictions for the different models
for (i in 1:nrow(hhadata2015.seperated)) {
#Model using the 3 different severities
row_removed <- hhadata2015.seperated[-i, ]
lm_model_serverties <- lm(Average.HHA.Medicare.Payment.Amount ~ Service_Severity_Level +
Functional_Severity_Level + Clinical_Severity_Level,
data =  row_removed)
prediction_severities <- predict(lm_model_serverties, newdata = hhadata2015.seperated[i, ])
rmse_severities <- ((hhadata2015.seperated$Average.HHA.Medicare.Payment.Amount[i] - prediction_severities)^2)
rmse_values_severities <- c(rmse_values_severities, rmse_severities)
hhadata2015.seperated$RMSE_Severities[i] <- rmse_severities
hhadata2015.seperated$prediction_severities[i] <- prediction_severities
#Empty model
lm_model_empty <- lm(Average.HHA.Medicare.Payment.Amount ~ 1, data = row_removed)
prediction_empty <- predict(lm_model_empty, newdata = hhadata2015.seperated[i, ])
rmse_empty <-  ((hhadata2015.seperated$Average.HHA.Medicare.Payment.Amount[i] - prediction_empty)^2)
rmse_values_empty <- c(rmse_values_empty, rmse_empty)
hhadata2015.seperated$RMSE_Empty[i] <- rmse_empty
hhadata2015.seperated$prediction_empty[i] <- prediction_empty
#Model using only Service Severity
lm_model_service <- lm(Average.HHA.Medicare.Payment.Amount ~ Service_Severity_Level, data = row_removed)
prediction_service <- predict(lm_model_service, newdata = hhadata2015.seperated[i, ])
rmse_service <- ((hhadata2015.seperated$Average.HHA.Medicare.Payment.Amount[i] - prediction_service)^2)
rmse_values_service <- c(rmse_values_service, rmse_service)
hhadata2015.seperated$RMSE_Service_Severity[i] <- rmse_service
hhadata2015.seperated$prediction_service[i] <- prediction_service
#Model using only Functional Severity
lm_model_functional <- lm(Average.HHA.Medicare.Payment.Amount ~ Functional_Severity_Level, data = row_removed)
prediction_functional <- predict(lm_model_functional, newdata = hhadata2015.seperated[i, ])
rmse_functional <- ((hhadata2015.seperated$Average.HHA.Medicare.Payment.Amount[i] - prediction_functional)^2)
rmse_values_functional <- c(rmse_values_functional, rmse_functional)
hhadata2015.seperated$RMSE_Functional_Severity[i] <- rmse_functional
hhadata2015.seperated$prediction_functional[i] <- prediction_functional
#Model using only Clinical Severity
lm_model_clinical <- lm(Average.HHA.Medicare.Payment.Amount ~ Clinical_Severity_Level, data = row_removed)
prediction_clinical <- predict(lm_model_clinical, newdata = hhadata2015.seperated[i, ])
rmse_clinical <- ((hhadata2015.seperated$Average.HHA.Medicare.Payment.Amount[i] - prediction_clinical)^2)
rmse_values_clinical <- c(rmse_values_clinical, rmse_clinical)
hhadata2015.seperated$RMSE_Clinical_Severity[i] <- rmse_clinical
hhadata2015.seperated$prediction_clinical[i] <- prediction_clinical
#Model using Therapies
lm_model_therapies <- lm(Average.HHA.Medicare.Payment.Amount ~ Therapies, data = row_removed)
prediction_therapies <- predict(lm_model_therapies, newdata = hhadata2015.seperated[i, ])
rmse_therapies <- ((hhadata2015.seperated$Average.HHA.Medicare.Payment.Amount[i] - prediction_therapies)^2)
rmse_values_therapies <- c(rmse_values_therapies, rmse_therapies)
hhadata2015.seperated$RMSE_Therapies[i] <- rmse_therapies
hhadata2015.seperated$prediction_therapies[i] <- prediction_therapies
#Model using Therapies + Clinical
lm_model_therapies_clinical <- lm(Average.HHA.Medicare.Payment.Amount ~ Therapies + Clinical_Severity_Level, data = row_removed)
prediction_therapies_clinical <- predict(lm_model_therapies_clinical, newdata = hhadata2015.seperated[i, ])
rmse_therapies_clinical <- ((hhadata2015.seperated$Average.HHA.Medicare.Payment.Amount[i] - prediction_therapies_clinical)^2)
rmse_values_therapies_clinical <- c(rmse_values_therapies_clinical, rmse_therapies_clinical)
hhadata2015.seperated$RMSE_Therapies_and_Clinical[i] <- rmse_therapies_clinical
hhadata2015.seperated$prediction_therapies_and_clinical[i] <- prediction_therapies_clinical
#Model using Therapies + Functional
lm_model_therapies_functional <- lm(Average.HHA.Medicare.Payment.Amount ~ Therapies + Functional_Severity_Level, data = row_removed)
prediction_therapies_functional <- predict(lm_model_therapies_functional, newdata = hhadata2015.seperated[i, ])
rmse_therapies_functional <- ((hhadata2015.seperated$Average.HHA.Medicare.Payment.Amount[i] - prediction_therapies_functional)^2)
rmse_values_therapies_functional <- c(rmse_values_therapies_functional, rmse_therapies_functional)
hhadata2015.seperated$RMSE_Therapies_and_Functional[i] <- rmse_therapies_functional
hhadata2015.seperated$prediction_therapies_and_functional[i] <- prediction_therapies_functional
#Model using Therapies + Service
lm_model_therapies_service <- lm(Average.HHA.Medicare.Payment.Amount ~ Therapies + Service_Severity_Level, data = row_removed)
prediction_therapies_service <- predict(lm_model_therapies_service, newdata = hhadata2015.seperated[i, ])
rmse_therapies_service <- ((hhadata2015.seperated$Average.HHA.Medicare.Payment.Amount[i] - prediction_therapies_service)^2)
rmse_values_therapies_service <- c(rmse_values_therapies_service, rmse_therapies_service)
hhadata2015.seperated$RMSE_Therapies_and_Service[i] <- rmse_therapies_service
hhadata2015.seperated$prediction_therapies_and_service[i] <- prediction_therapies_service
#Model using all variables
lm_model_all_var <- lm(Average.HHA.Medicare.Payment.Amount ~ Therapies + Service_Severity_Level + Clinical_Severity_Level
+ Functional_Severity_Level, data = row_removed)
prediction_all_var <- predict(lm_model_all_var, newdata = hhadata2015.seperated[i, ])
rmse_all_var <- ((hhadata2015.seperated$Average.HHA.Medicare.Payment.Amount[i] - prediction_all_var)^2)
rmse_values_all_var <- c(rmse_values_all_var, rmse_all_var)
hhadata2015.seperated$RMSE_All_Variables[i] <- rmse_all_var
hhadata2015.seperated$prediction_all_variables[i] <- prediction_all_var
}
average_rmse_severities <- sqrt(mean(rmse_values_severities))
average_rmse_empty <- sqrt(mean(rmse_values_empty))
average_rmse_service <- sqrt(mean(rmse_values_service))
average_rmse_functional <- sqrt(mean(rmse_values_functional))
average_rmse_clinical <- sqrt(mean(rmse_values_clinical))
average_rmse_therapies <- sqrt(mean(rmse_values_therapies))
average_rmse_therapies_clinical <- sqrt(mean(rmse_values_therapies_clinical))
average_rmse_therapies_functional <- sqrt(mean(rmse_values_therapies_functional))
average_rmse_therapies_service <- sqrt(mean(rmse_values_therapies_service))
average_rmse_all_var<- sqrt(mean(rmse_values_all_var))
print(paste("Average Root Mean Squared Error (RMSE) for Empty Model from Cross-Validation:", average_rmse_empty))
print(paste("Average Root Mean Squared Error (RMSE) for Severities Model from Cross-Validation:", average_rmse_severities))
print(paste("Average Root Mean Squared Error (RMSE) for Service Severity Model from Cross-Validation:", average_rmse_service))
print(paste("Average Root Mean Squared Error (RMSE) for Functional Severity Model from Cross-Validation:", average_rmse_functional))
print(paste("Average Root Mean Squared Error (RMSE) for Clinical Severity Model from Cross-Validation:", average_rmse_clinical))
print(paste("Average Root Mean Squared Error (RMSE) for Therapies Model from Cross-Validation:", average_rmse_therapies))
print(paste("Average Root Mean Squared Error (RMSE) for Therapies and Clinical Severity Model from Cross-Validation:", average_rmse_therapies_clinical))
print(paste("Average Root Mean Squared Error (RMSE) for Therapies and Functional Severity Model from Cross-Validation:", average_rmse_therapies_functional))
print(paste("Average Root Mean Squared Error (RMSE) for Therapies and Service Severity Model from Cross-Validation:", average_rmse_therapies_service))
print(paste("Average Root Mean Squared Error (RMSE) for all varibales from Cross-Validation:", average_rmse_all_var))
rmse_data <- tibble(
Description = c(
"Empty Model", "Severities Model", "Service Severity Model", "Functional Severity Model",
"Clinical Severity Model", "Therapies Model", "Therapies and Clinical Severity Model",
"Therapies and Functional Severity Model", "Therapies and Service Severity Model", "All Variables Model"
),
RMSE = round(c(
average_rmse_empty, average_rmse_severities, average_rmse_service, average_rmse_functional,
average_rmse_clinical, average_rmse_therapies, average_rmse_therapies_clinical,
average_rmse_therapies_functional, average_rmse_therapies_service, average_rmse_all_var
), 2)
)
rmse_data <- arrange(rmse_data, desc(RMSE))
rmse_kable_table <- kable(rmse_data, format = "html", caption = "RMSE Values For Linear Models")
cat(kable_table, file = "rmse_table.html")
rmse_kable_table
col_names <- c("HHRG","Expected Therapy Visits", "Clinical Severity Level", "Functional Severity Level",
"Service Severity Level", "Total HHA Medicare Payment Amount" ,"Total Episodes", "Average HHA Medicare Payment Amount")
hhadata2015.seperated_renamed <- hhadata2015.seperated %>%
select("HHRG", "Therapies", "Clinical_Severity_Level", "Functional_Severity_Level", "Service_Severity_Level", "Total.HHA.Medicare.Payment.Amount" ,"Total.Episodes", "Average.HHA.Medicare.Payment.Amount") %>%
setNames(col_names)
pretty_kable_table <- kable(hhadata2015.seperated_renamed, format = "html", caption = "HHRG Aggregation Data 2015")
cat(pretty_kable_table, file = "OG Data.html")
col_names <- c("HHRG","Expected Therapy Visits", "Clinical Severity Level", "Functional Severity Level",
"Service Severity Level", "Total HHA Medicare Payment Amount" ,"Total Episodes", "Average HHA Medicare Payment Amount")
hhadata2015.seperated_renamed <- hhadata2015.seperated %>%
select("HHRG", "Therapies", "Clinical_Severity_Level", "Functional_Severity_Level", "Service_Severity_Level", "Total.HHA.Medicare.Payment.Amount" ,"Total.Episodes", "Average.HHA.Medicare.Payment.Amount") %>%
setNames(col_names) %>%
slive(1:10)
col_names <- c("HHRG","Expected Therapy Visits", "Clinical Severity Level", "Functional Severity Level",
"Service Severity Level", "Total HHA Medicare Payment Amount" ,"Total Episodes", "Average HHA Medicare Payment Amount")
hhadata2015.seperated_renamed <- hhadata2015.seperated %>%
select("HHRG", "Therapies", "Clinical_Severity_Level", "Functional_Severity_Level", "Service_Severity_Level", "Total.HHA.Medicare.Payment.Amount" ,"Total.Episodes", "Average.HHA.Medicare.Payment.Amount") %>%
setNames(col_names) %>%
slice(1:10)
pretty_kable_table <- kable(hhadata2015.seperated_renamed, format = "html", caption = "HHRG Aggregation Data 2015")
cat(pretty_kable_table, file = "OG Data.html")
col_names <- c("HHRG","Expected Therapy Visits", "Clinical Severity Level", "Functional Severity Level",
"Service Severity Level", "Total HHA Medicare Payment Amount" ,"Total Episodes", "Average HHA Medicare Payment Amount")
hhadata2015.seperated_renamed <- hhadata2015.seperated %>%
select("HHRG", "Therapies", "Clinical_Severity_Level", "Functional_Severity_Level", "Service_Severity_Level", "Total.HHA.Medicare.Payment.Amount" ,"Total.Episodes", "Average.HHA.Medicare.Payment.Amount") %>%
setNames(col_names) %>%
slice(1:10)
pretty_kable_table <- kable(hhadata2015.seperated_renamed, format = "html", caption = "HHRG Aggregation Data 2015 (First 10 rows)")
cat(pretty_kable_table, file = "OG Data.html")
includeHTML("OG Data.html")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(htmltools)
#Put Necessary Libraries Here
includeHTML("OG Data.html")
includeHTML("OG Data.html")
hhadata2015.seperated
